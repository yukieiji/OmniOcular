<!--Date: 2018/07/31-->
<!--Version: 6.07.24-->
<!-- yukieiji -->
<oo>
    <!-- るつぼ -->
    <tileentity id = "gt.multitileentity.smeltery">
		<!-- TODO : 機械の注意/爆炸警告 -->

	    <line displayname = "現在の温度">
			return nbt['gt.temperature'] + Unit("K") + " / " + KevinCap(nbt['gt.mte.id']) + Unit("K");
        </line>

		<line displayname = "搬入されたアイテムの種類">
			return nbt['gt.materials']['size'] + Unit("種類");
        </line>

		<line displayname = "溶けているアイテム">
			if(nbt['gt.materials']['0'] != undefined){
				var str = '';
				var i = 0;

				while(i < 4){
					if(nbt['gt.materials'][i.toString()] != undefined){
						str += getName(nbt['gt.materials'][i.toString()]['i'],"material") + parseInt(nbt['gt.materials'][i.toString()]['a'] / 420076800 * 1000) / 1000 + Unit("ユニット");
					}
					if(((i + 1) < 4) && (nbt['gt.materials'][(i + 1).toString()] != undefined)){
						str += " | ";
					}
					i++;
				}

				return str;
			}
        </line>

		<line displayname = "溶けているアイテム">
			if(nbt['gt.materials']['4'] != undefined){
				var str = '';
				var i = 4;

				while(i < 8){
					if(nbt['gt.materials'][i.toString()] != undefined){
						str += getName(nbt['gt.materials'][i.toString()]['i'],"material") + parseInt(nbt['gt.materials'][i.toString()]['a'] / 420076800 * 1000) / 1000 + Unit("ユニット");
					}
					if(((i + 1) < 8) && (nbt['gt.materials'][(i + 1).toString()] != undefined)){
						str += " | ";
					}
					i++;
				}

				return str;
			}
        </line>

		<line displayname = "溶けているアイテム">
			if(nbt['gt.materials']['8'] != undefined){
				var str = '';
				var i = 8;

				while(i < 12){
					if(nbt['gt.materials'][i.toString()] != undefined){
						str += getName(nbt['gt.materials'][i.toString()]['i'],"material") + parseInt(nbt['gt.materials'][i.toString()]['a'] / 420076800 * 1000) / 1000 + Unit("ユニット");
					}
					if(((i + 1) < 12) && (nbt['gt.materials'][(i + 1).toString()] != undefined)){
						str += " | ";
					}
					i++;
				}

				return str;
			}
        </line>

		<line displayname = "溶けているアイテム">
			if(nbt['gt.materials']['12'] != undefined){
				var str = '';
				var i = 12;

				while(i < 16){
					if(nbt['gt.materials'][i.toString()] != undefined){
						str += getName(nbt['gt.materials'][i.toString()]['i'],"material") + parseInt(nbt['gt.materials'][i.toString()]['a'] / 420076800 * 1000) / 1000 + Unit("ユニット");
					}
					if(((i + 1) < 16) && (nbt['gt.materials'][(i + 1).toString()] != undefined)){
						str += " | ";
					}
					i++;
				}

				return str;
			}
        </line>

		<line displayname = "溶けているアイテム">
			if(nbt['gt.materials']['16'] != undefined){
				var str = '';
				var i = 16;

				while(i < 20){
					if(nbt['gt.materials'][i.toString()] != undefined){
						str += getName(nbt['gt.materials'][i.toString()]['i'],"material") + parseInt(nbt['gt.materials'][i.toString()]['a'] / 420076800 * 1000) / 1000 + Unit("ユニット");
					}
					if(((i + 1) < 20) && (nbt['gt.materials'][(i + 1).toString()] != undefined)){
						str += " | ";
					}
					i++;
				}

				return str;
			}
        </line>

	</tileentity>

	<!-- 鋳型 -->
	<tileentity id = "gt.multitileentity.mold">
		<!-- TODO : 機械の注意 -->

	    <line displayname = "現在の温度">
			return nbt['gt.temperature'] + Unit("K") + " / " + KevinCap(nbt['gt.mte.id']) + Unit("K");
        </line>

		<line displayname = "鋳型の形">
			try{
				if(nbt['gt.mold'] != undefined){
					return Mold2Recipes(nbt['gt.mold']);
				}
				return "なし";
			}
			catch(e){}
		</line>

		<line displayname = "接続されている方向">
			var str = "";
			if((nbt['gt.connection'] & 4) == 4){
				str += "北";
				if((nbt['gt.connection'] & 8) == 8 || (nbt['gt.connection'] & 16) == 16 || (nbt['gt.connection'] & 32) == 32){
					str += " | ";
				}
			}
			if((nbt['gt.connection'] & 8) == 8){
				str += "南";
				if((nbt['gt.connection'] & 16) == 16 || (nbt['gt.connection'] & 32) == 32){
					str += " | ";
				}
			}
			if((nbt['gt.connection'] & 16) == 16){
				str += "西";
				if((nbt['gt.connection'] & 32) == 32){
					str += " | ";
				}
			}
			if((nbt['gt.connection'] & 32) == 32){
				str += "東";
			}
			if(str != ""){
				return str;
			}
			return "なし";
		</line>

		<line displayname = "自動搬入">
			if(nbt['gt.mode'] != undefined){
				return BLUE + "レッドストーン信号がオンの時、自動搬入される";
			}
			return BLUE + "自動搬入無効";
		</line>

		<line displayname = "鋳型の材料">
			return getName(nbt['gt.materials']['i'],"material");
	    </line>

		<line displayname = "搬入されてるアイテム">
			return name(nbt['gt.invlist']['0']) + " : " + nbt['gt.invlist']['0']['Count'] + Unit("個");
		</line>

	</tileentity>

	<!-- るつぼ蛇口 -->
	<tileentity id = "gt.multitileentity.smeltery.drain">
		<line displayname = "自動搬出">
			if(nbt['gt.mode'] != undefined){
				return BLUE + "自動搬出無効";
			}
			return BLUE + "レッドストーン信号がオンの時、自動搬入を行う";
		</line>

	</tileentity>

	<!-- ベイスン -->
	<tileentity id = "gt.multitileentity.basin">
		<!-- TODO : 機械の注意 -->

	    <line displayname = "現在の温度">
			return nbt['gt.temperature'] + Unit("K") + " / " + KevinCap(nbt['gt.mte.id']) + Unit("K");
        </line>

		<line displayname = "向いている方角">
			var str = "";
			if((nbt['gt.connection'] & 4) == 4){
				str += "北";
				if((nbt['gt.connection'] & 8) == 8 || (nbt['gt.connection'] & 16) == 16 || (nbt['gt.connection'] & 32) == 32){
					str += " | ";
				}
			}
			if((nbt['gt.connection'] & 8) == 8){
				str += "南";
				if((nbt['gt.connection'] & 16) == 16 || (nbt['gt.connection'] & 32) == 32){
					str += " | ";
				}
			}
			if((nbt['gt.connection'] & 16) == 16){
				str += "西";
				if((nbt['gt.connection'] & 32) == 32){
					str += " | ";
				}
			}
			if((nbt['gt.connection'] & 32) == 32){
				str += "東";
			}
			if(str != ""){
				return str;
			}
			return "なし";
		</line>

		<line displayname = "自動搬入">
			if(nbt['gt.mode'] != undefined){
				return BLUE + "レッドストーン信号がオンの時、自動搬入される";
			}
			return BLUE + "自動搬入無効";
		</line>

		<line displayname = "入っている液体">
			return getName(nbt['gt.materials']['i'],"material");
	    </line>

		<line displayname = "搬入されてるアイテム">
			return name(nbt['gt.invlist']['0']) + " : " + nbt['gt.invlist']['0']['Count'] + Unit("個");
		</line>

	</tileentity>

	<!-- ボイラー -->
	<tileentity id = "gt.multitileentity.tank.boiler_steam">
		<line displayname = "警告1">
			if((nbt['gt.tank.1']['Amount'] / (SteamCap(nbt))) > 0.10){
				return RED + "現在の爆発威力は:" + ExplodeRoundSU(nbt['gt.tank.1']['Amount']) + "です";
			}
		</line>

		<line displayname = "ボイラー注意1">
			if((nbt['gt.energy'] != undefined) && (nbt['gt.tank.1']['Amount'] != undefined)){
				if((nbt['gt.energy'] + nbt['gt.tank.1']['Amount'] / 2) > 2000){
					return RED + "ボイラーに触れると" + HeatDamageSU(nbt['gt.energy'],nbt['gt.tank.1']['Amount'],0) + "のダメージを受けます";
				}
			}

			if(nbt['gt.energy'] != undefined){
				if(nbt['gt.tank.1']['Amount'] != undefined){
					if((nbt['gt.energy'] + nbt['gt.tank.1']['Amount'] / 2) > 2000){
						return RED + "ボイラーに触れると" + HeatDamageSU(nbt['gt.energy'],nbt['gt.tank.1']['Amount'],0) + "のダメージを受けます";
					}
				}
				if((nbt['gt.energy']) > 2000){
					return RED + "ボイラーに触れると" + HeatDamageSU(nbt['gt.energy'],0,0) + "のダメージを受けます";
				}
			}
			if(nbt['gt.tank.1']['Amount'] != undefined){
				if((nbt['gt.tank.1']['Amount'] / 2) > 2000){
					return RED + "ボイラーに触れると" + HeatDamageSU(0,nbt['gt.tank.1']['Amount'],0) + "のダメージを受けます";
				}
			}
		</line>

		<line displayname = "機械の注意2">
			if((nbt['gt.energy'] != undefined) && (nbt['gt.tank.1']['Amount'] != undefined)){
				if((nbt['gt.energy'] + nbt['gt.tank.1']['Amount'] / 2) > 2000){
					return RED + "今、ノミで加工すると" + HeatDamageSU(nbt['gt.energy'],nbt['gt.tank.1']['Amount'],1) + "のダメージを受けます";
				}
			}

			if(nbt['gt.energy'] != undefined){
				if(nbt['gt.tank.1']['Amount'] != undefined){
					if((nbt['gt.energy'] + nbt['gt.tank.1']['Amount'] / 2) > 2000){
						return RED + "今、ノミで加工すると" + HeatDamageSU(nbt['gt.energy'],nbt['gt.tank.1']['Amount'],1) + "のダメージを受けます";
					}
				}
				if((nbt['gt.energy']) > 2000){
					return RED + "今、ノミで加工すると" + HeatDamageSU(nbt['gt.energy'],0,1) + "のダメージを受けます";
				}
			}
			if(nbt['gt.tank.1']['Amount'] != undefined){
				if((nbt['gt.tank.1']['Amount'] / 2) > 2000){
					return RED + "今、ノミで加工すると" + HeatDamageSU(0,nbt['gt.tank.1']['Amount'],1) + "のダメージを受けます";
				}
			}
		</line>

		<line displayname = "ボイラーの状態">
			if(nbt['gt.tank.1']['Amount'] * 2 >= (SteamCap(nbt))){
				return GREEN + "蒸気搬出中";
			}
			if(nbt['gt.tank.0'] != undefined){
				return BLUE + "加熱中";
			}
			if(nbt['gt.energy'] != undefined){
				return GOLD + "空焚き中";
			}
			return RED + "停止中";
		</line>

		<line displayname = "効率">
			if(nbt['gt.eff'] != undefined){
				return nbt['gt.eff'] / 100 + "%";
			}
			return "100.00%";
		</line>

		<line displayname = "保有しているエネルギー">
			if(nbt['gt.energy'] != undefined){
				return nbt['gt.energy'] + "/" + SteamCap(nbt) + Unit("HU") + " - " + parseInt(nbt['gt.energy'] / SteamCap(nbt) * 10000) / 100 + "%";
			}
			return "0/" + SteamCap(nbt) + Unit("HU") + " - " + "0.00%";
		</line>

	    <line displayname = "入っている液体名">
			return fluidName(nbt['gt.tank.0']['FluidName']);
		</line>

		<line displayname = "液体の量">
			if(nbt['gt.tank.0'] != undefined){
				return nbt['gt.tank.0']['Amount'] + "/4000" + Unit("L");
			}
			return "0/4000" + Unit("L");
		</line>

		<line displayname = "蒸気の量">
			if(nbt['gt.tank.1'] != undefined){
				return nbt['gt.tank.1']['Amount'] + "/" + SteamCap(nbt) + Unit("L") + " - " + parseInt(nbt['gt.tank.1']['Amount'] / SteamCap(nbt) * 10000) / 100 + "%";
			}
			return "0/" + SteamCap(nbt) + Unit("L") + " - " + "0.00%";
		</line>

	</tileentity>

	<!-- ラージボイラー -->
	<tileentity id = "gt.multitileentity.multiblock.boiler.steam">
		<line displayname = "警告1">
			if((nbt['gt.tank.1']['Amount'] / (SteamCap(nbt))) > 0.10){
				return RED + "現在の爆発威力は:" + ExplodeRoundSU(nbt['gt.tank.1']['Amount']) + "です";
			}

		<line displayname = "機械の注意">
			if((nbt['gt.energy'] != undefined) && (nbt['gt.tank.1']['Amount'] != undefined)){
				if((nbt['gt.energy'] + nbt['gt.tank.1']['Amount'] / 2) > 2000){
					return RED + "今、ノミで加工すると" + HeatDamageSU(nbt['gt.energy'],nbt['gt.tank.1']['Amount'],1) + "のダメージを受けます";
				}
			}

			if(nbt['gt.energy'] != undefined){
				if(nbt['gt.tank.1']['Amount'] != undefined){
					if((nbt['gt.energy'] + nbt['gt.tank.1']['Amount'] / 2) > 2000){
						return RED + "今、ノミで加工すると" + HeatDamageSU(nbt['gt.energy'],nbt['gt.tank.1']['Amount'],1) + "のダメージを受けます";
					}
				}
				if((nbt['gt.energy']) > 2000){
					return RED + "今、ノミで加工すると" + HeatDamageSU(nbt['gt.energy'],0,1) + "のダメージを受けます";
				}
			}
			if(nbt['gt.tank.1']['Amount'] != undefined){
				if((nbt['gt.tank.1']['Amount'] / 2) > 2000){
					return RED + "今、ノミで加工すると" + HeatDamageSU(0,nbt['gt.tank.1']['Amount'],1) + "のダメージを受けます";
				}
			}
		</line>

		<line displayname = "ボイラーの状態">
			if(nbt['gt.tank.1']['Amount'] * 2 >= (SteamCap(nbt))){
				return GREEN + "蒸気搬出中";
			}
			if(nbt['gt.tank.0'] != undefined){
				return BLUE + "加熱中";
			}
			if(nbt['gt.energy'] != undefined){
				return GOLD + "干烧";
			}
			return RED + "停止中";
		</line>

		<line displayname = "効率">
			if(nbt['gt.eff'] != undefined){
				return nbt['gt.eff'] / 100 + "%";
			}
			return "100.00%";
		</line>

		<line displayname = "保有しているエネルギー">
			if(nbt['gt.energy'] != undefined){
				return nbt['gt.energy'] + "/" + SteamCap(nbt) + Unit("HU") + " - " + parseInt(nbt['gt.energy'] / SteamCap(nbt) * 10000) / 100 + "%";
			}
			return "0/" + SteamCap(nbt) + Unit("HU") + " - " + "0.00%";
		</line>

	    <line displayname = "入っている液体名">
			return fluidName(nbt['gt.tank.0']['FluidName']);
		</line>

		<line displayname = "液体の量">
			if(nbt['gt.tank.0'] != undefined){
				return nbt['gt.tank.0']['Amount'] + "/12800" + Unit("L");
			}
			return "0/4000" + Unit("L");
		</line>

		<line displayname = "蒸気の量">
			if(nbt['gt.tank.1'] != undefined){
				return nbt['gt.tank.1']['Amount'] + "/" + SteamCap(nbt) + Unit("L") + " - " + parseInt(nbt['gt.tank.1']['Amount'] / SteamCap(nbt) * 10000) / 100 + "%";
			}
			return "0/" + SteamCap(nbt) + Unit("L") + " - " + "0.00%";
		</line>

	</tileentity>

	<!-- 蒸気エンジン -->
	<tileentity id = "gt.multitileentity.engine.kinetic_steam">
		<line displayname = "機械の警告">
			return RED + "蒸留水が満杯になると強制的に停止します";
		</line>

		<line displayname = "機械の状態">
			if(nbt['gt.stopped'] == 1){
				return RED + "停止中";
			}
			if(nbt['gt.active'] == 1){
				return GREEN + "動作中";
			}
			return BLUE + "予熱で動作中";
		</line>

		<line displayname = "エネルギー出力">
			if(nbt['gt.active'] == 1){
				return ID2Tier(nbt['gt.mte.id'],"SU","KU",0) * ((nbt['gt.visual'] + 1) / 16) + Unit("KU") + "/t";
			}
			return "機械は動作していません - 0" + Unit("KU") + "/t";
		</line>

	    <line displayname = "エネルギー搬出量">
			if(nbt['gt.energy'] != undefined){
				return nbt['gt.energy'] + "/" + bind(2000,2147483647,ID2Tier(nbt['gt.mte.id'],"SU","KU",0) * 2000) + Unit("KU") + " - " + parseInt(nbt['gt.energy'] / bind(2000,2147483647,ID2Tier(nbt['gt.mte.id'],"SU","KU",0) * 2000) * 10000) / 100 + "%";
			}
			return "0/" + bind(2000,2147483647,ID2Tier(nbt['gt.mte.id'],"SU","KU",0) * 2000) + Unit("KU") + " - " + "0.00%";
		</line>

		<line displayname = "蒸気搬入量">
			if(nbt['gt.tank.0'] != undefined){
				return nbt['gt.tank.0']['Amount'] + "/" + bind(200,2147483647,ID2Tier(nbt['gt.mte.id'],"SU","KU",0) * 200) + Unit("L");
			}
			return "0/" + bind(200,2147483647,ID2Tier(nbt['gt.mte.id'],"SU","KU",0) * 200) + Unit("L");
		</line>

	</tileentity>

	<!-- 電気エンジン -->
	<tileentity id = "gt.multitileentity.engine.kinetic_electricity">
		<line displayname = "機械の状態">
			isRun(nbt);
		</line>

		<line displayname = "エネルギー入力">
			if(nbt['gt.mode'] == undefined){
				return ID2Tier(nbt['gt.mte.id'],"EU","KU",1) + Unit("EU") + "/t" + " - " +  "1" + Unit("A");
			}
			if(nbt['gt.mode'] < 7){
				return ID2Tier(nbt['gt.mte.id'],"EU","KU",1) / 2 + Unit("EU") + "/t" + " - " + ((1 + nbt['gt.mode']) / 8) + Unit("A");
			}
			return ID2Tier(nbt['gt.mte.id'],"EU","KU",1) * (nbt['gt.mode'] + 1) / 16 + Unit("EU") + "/t" + " - " + "1" + Unit("A");
		</line>

		<line displayname = "エネルギー出力">
			if(nbt['gt.mode'] == undefined){
				return ID2Tier(nbt['gt.mte.id'],"EU","KU",0) + Unit("KU") + "/t";
			}
			return ID2Tier(nbt['gt.mte.id'],"EU","KU",0) * (nbt['gt.mode'] + 1) / 16 + Unit("KU") + "/t";
		</line>

	</tileentity>

	<!-- 蒸気タービン -->
	<tileentity id = "gt.multitileentity.turbines.rotation_steam">
		<line displayname = "機械の注意">
			if(nbt['gt.can.energy'] == 1 && nbt['gt.facing'] == 1){
				return RED + "RU出力する面でプレーヤー/動物/エンティティなどは回転してしまいます";
			}
		</line>

		<line displayname = "機械の状態">
			if(nbt['gt.output.su'] != undefined){
				if((nbt['gt.output.su'] / 3) > (ID2Tier(nbt['gt.mte.id'],"SU","RU",0) * 2)){
					return BLUE + "過負荷状態";
				}
			}
			if(nbt['gt.tank.0'] != undefined){
				if((nbt['gt.tank.0']['Amount'] / 3) > (ID2Tier(nbt['gt.mte.id'],"SU","RU",0) * 2)){
					return BLUE + "過負荷状態";
				}
			}
			isRun(nbt);
		</line>

		<line displayname = "エネルギー出力">
			if(nbt['gt.output.su'] != undefined){
				if((nbt['gt.output.su'] / 3) > (ID2Tier(nbt['gt.mte.id'],"SU","RU",0) * 2)){
					return RED + "エネルギー入力が不安定のため機械が正しく動作しないです"
				}
			}
			if(nbt['gt.tank.0'] != undefined){
				if((nbt['gt.tank.0']['Amount'] / 3) > (ID2Tier(nbt['gt.mte.id'],"SU","RU",0) * 2)){
					return RED + "エネルギー入力が不安定のため機械が正しく動作しないです"
				}
			}
			if(nbt['gt.output.su'] != undefined){
				return parseInt(nbt['gt.output.su'] / 3) + Unit("RU") + "/t";
			}
			if(nbt['gt.tank.0'] != undefined){
				return parseInt(nbt['gt.tank.0']['Amount'] / 3) + Unit("RU") + "/t";
			}
			return "0" + Unit("RU") + "/t";
		</line>

		<line displayname = "蒸気搬入量">
			if(nbt['gt.tank.0'] != undefined){
				return nbt['gt.tank.0']['Amount'] + "/" + bind(1,2147483647,ID2Tier(nbt['gt.mte.id'],"SU","RU",1) * 2 * 4) + Unit("L");
			}
			return "0/" + bind(1,2147483647,ID2Tier(nbt['gt.mte.id'],"SU","RU",1) * 2 * 4) + Unit("L");
		</line>

		<line displayname = "回転方向">
			if(nbt['gt.can.energy'] == 1 && nbt['gt.facing'] == 1){
				if(nbt['gt.reversed'] != undefined){
					return BLUE + "時計回り";
				}
				return BLUE + "反時計回り";
			}
		</line>

		<line displayname = "回転速度">
			if(nbt['gt.can.energy'] == 1 && nbt['gt.facing'] == 1){
				if(nbt['gt.output.su'] != undefined){
					if((nbt['gt.output.su'] / 3) > ID2Tier(nbt['gt.mte.id'],"SU","RU",0)){
						return "10" + Unit("Angle") + "/t" + " - " + "1.8" + BLUE + " 秒" + WHITE + "で1回転します";
					}
				}
				if(nbt['gt.tank.0'] != undefined){
					if((nbt['gt.tank.0']['Amount'] / 3) > ID2Tier(nbt['gt.mte.id'],"SU","RU",0)){
						return "10" + Unit("Angle") + "/t" + " - " + "1.8" + BLUE + " 秒" + WHITE + "で1回転します";
					}
				}
				return "5" + Unit("Angle") + "/t" + " - " + "3.6" + BLUE + " 秒" + WHITE + "で1回転します";
			}
		</line>

	</tileentity>

	<!-- 電気ヒーター -->
	<tileentity id = "gt.multitileentity.heater.heat_electric">
		<line displayname = "機械の注意">
			return RED + "HUを出力する面では" + Math.min(10,(ID2Tier(nbt['gt.mte.id'],"EU","HU",1) / 10)) + "のダメージを受ける";
		</line>

		<line displayname = "機械の状態">
			isRun(nbt);
		</line>

		<line displayname = "エネルギー入力">
			return ID2Tier(nbt['gt.mte.id'],"EU","HU",1) + Unit("EU") + "/t" + " - " + "(" + ID2Tier(nbt['gt.mte.id'],"EU","HU",1) / 2 + " ～ " + ID2Tier(nbt['gt.mte.id'],"EU","HU",1) * 2 + ")";
		</line>

		<line displayname = "エネルギー出力">
			return ID2Tier(nbt['gt.mte.id'],"EU","HU",0) + Unit("HU") + "/t" + " - " + "(" + ID2Tier(nbt['gt.mte.id'],"EU","HU",0) / 2 + " ～ " + ID2Tier(nbt['gt.mte.id'],"EU","HU",0) * 2 + ")";
		</line>

	</tileentity>

	<!-- 電気モーター -->
	<tileentity id = "gt.multitileentity.motors.rotation_electric">
		<line displayname = "機械の注意">
			if(nbt['gt.can.energy'] == 1 && nbt['gt.facing'] == 1){
				return RED + "RU出力する面でプレーヤー/動物/エンティティなどは回転してしまいます";
			}
		</line>

		<line displayname = "機械の状態">
			isRun(nbt);
		</line>

		<line displayname = "エネルギー入力">
			return ID2Tier(nbt['gt.mte.id'],"EU","RU",1) + Unit("EU") + "/t" + " - " + "(" + ID2Tier(nbt['gt.mte.id'],"EU","RU",1) / 2 + " ～ " + ID2Tier(nbt['gt.mte.id'],"EU","RU",1) * 2 + ")";
		</line>

		<line displayname = "エネルギー出力">
			return ID2Tier(nbt['gt.mte.id'],"EU","RU",0) + Unit("RU") + "/t" + " - " + "(" + ID2Tier(nbt['gt.mte.id'],"EU","RU",0) / 2 + " ～ " + ID2Tier(nbt['gt.mte.id'],"EU","RU",0) * 2 + ")";
		</line>

		<line displayname = "回転方向">
			if(nbt['gt.can.energy'] == 1 && nbt['gt.facing'] == 1){
				if(nbt['gt.reversed'] != undefined){
					return BLUE + "時計回り";
				}
				return BLUE + "反時計回り";
			}
		</line>

		<line displayname = "回転速度">
			if(nbt['gt.can.energy'] == 1 && nbt['gt.facing'] == 1){
				if(nbt['gt.visual'] == 1){
					return "10" + Unit("Angle") + "/t" + " - " + "1.8" + BLUE + " 秒" + WHITE + "で1回転します";
				}
				return "5" + Unit("Angle") + "/t" + " - " + "3.6" + BLUE + " 秒" + WHITE + "で1回転します";
			}
		</line>

	</tileentity>

	<!-- 電磁石 -->
	<tileentity id = "gt.multitileentity.magnet.magnet_electric">
		<line displayname = "機械の状態">
			isRun(nbt);
		</line>

		<line displayname = "エネルギー入力">
			return ID2Tier(nbt['gt.mte.id'],"EU","MU",1) + Unit("EU") + "/t" + " - " + "(" + ID2Tier(nbt['gt.mte.id'],"EU","MU",1) / 2 + " ～ " + ID2Tier(nbt['gt.mte.id'],"EU","MU",1) * 2 + ")";
		</line>

		<line displayname = "エネルギー出力">
			return ID2Tier(nbt['gt.mte.id'],"EU","MU",0) + Unit("MU") + "/t" + " - " + "(" + ID2Tier(nbt['gt.mte.id'],"EU","MU",0) / 2 + " ～ " + ID2Tier(nbt['gt.mte.id'],"EU","MU",0) * 2 + ")";
		</line>

	</tileentity>

	<!-- 変圧器 -->
	<tileentity id = "gt.multitileentity.transformers.transformer_electric">
		<line displayname = "機械の状態">
			isRun(nbt);
		</line>

		<line displayname = "エネルギー入力">
			if(nbt['gt.reversed'] != undefined){
				return ID2Tier(nbt['gt.mte.id'],"EU","EU",0) + Unit("EU") + "/t" + " - " + "(" + ID2Tier(nbt['gt.mte.id'],"EU","EU",0) / 2 + " ～ " + ID2Tier(nbt['gt.mte.id'],"EU","EU",0) * 2 + ")";
			}
			return ID2Tier(nbt['gt.mte.id'],"EU","EU",1) + Unit("EU") + "/t" + " - " + "(" + ID2Tier(nbt['gt.mte.id'],"EU","EU",1) / 2 + " ～ " + ID2Tier(nbt['gt.mte.id'],"EU","EU",1) * 2 + ")";
		</line>

		<line displayname = "エネルギー出力">
			if(nbt['gt.reversed'] != undefined){
				return ID2Tier(nbt['gt.mte.id'],"EU","EU",1) + Unit("EU") + "/t" + " - " + "(" + ID2Tier(nbt['gt.mte.id'],"EU","EU",1) / 2 + " ～ " + ID2Tier(nbt['gt.mte.id'],"EU","EU",1) * 2 + ")";
			}
			return ID2Tier(nbt['gt.mte.id'],"EU","EU",0) + Unit("EU") + "/t" + " - " + "(" + ID2Tier(nbt['gt.mte.id'],"EU","EU",0) / 2 + " ～ " + ID2Tier(nbt['gt.mte.id'],"EU","EU",0) * 2 + ")";
		</line>

		<line displayname = "転送方向">
			if(nbt['gt.reversed'] != undefined){
				return BLUE + "大きな点が高電圧の" + RED + "搬出口 ，"+ BLUE + "小さな点が低電圧の" + RED + "搬入口";
			}
			return BLUE + BLUE + "大きな点が高電圧の" + RED + "搬入口 ，"+ BLUE + "小さな点が低電圧の" + RED + "搬出口";
		</line>

	</tileentity>

	<!-- バッテリーボックス -->
	<tileentity id = "gt.multitileentity.energystorages.battery_electric">
		<line displayname = "機械の状態">
			isRun(nbt);
		</line>

		<line displayname = "エネルギー出力">
			if(nbt['gt.mode'] != undefined){
				return ID2Tier(nbt['gt.mte.id'],"EU","EU",0) + Unit("EU") + "/t" + " - " + Math.min(nbt['gt.mode'],BatteryBoxArg(nbt,0,0,1)) + Unit("A");
			}
			return ID2Tier(nbt['gt.mte.id'],"EU","EU",0) + Unit("EU") + "/t" + " - " + BatteryBoxArg(nbt,0,0,1) + Unit("A");
		</line>

		<line displayname = "放電しているアイテム">
			return BatteryBoxArg(nbt,0,0,1) + Unit("個");
		</line>

		<line displayname = "充電中のアイテム">
			return BatteryBoxArg(nbt,0,3,1) + Unit("個");
		</line>

		<line displayname = "現在の総EU量">
			return BatteryBoxArg(nbt,0,1,1) + Unit("EU");
		</line>

		<line displayname = "貯蔵EU上限">
			return BatteryBoxArg(nbt,0,2,1) + Unit("EU");
		</line>

	</tileentity>

	<!-- ラージバッテリーボックス -->
	<tileentity id = "gt.multitileentity.energystorages.battery_electric_large">
		<line displayname = "機械の状態">
			isRun(nbt);
		</line>

		<line displayname = "エネルギー出力">
			if(nbt['gt.mode'] != undefined){
				return ID2Tier(nbt['gt.mte.id'],"EU","EU",0) + Unit("EU") + "/t" + " - " + Math.min(nbt['gt.mode'],BatteryBoxArg(nbt,1,0,1)) + Unit("A");
			}
			return ID2Tier(nbt['gt.mte.id'],"EU","EU",0) + Unit("EU") + "/t" + " - " + BatteryBoxArg(nbt,1,0,1) + Unit("A");
		</line>

		<line displayname = "放電しているアイテム">
			return BatteryBoxArg(nbt,1,0,1) + Unit("個");
		</line>

		<line displayname = "充電中のアイテム">
			return BatteryBoxArg(nbt,1,3,1) + Unit("個");
		</line>

		<line displayname = "現在の総EU量">
			return BatteryBoxArg(nbt,1,1,1) + Unit("EU");
		</line>

		<line displayname = "貯蔵EU上限">
			return BatteryBoxArg(nbt,1,2,1) + Unit("EU");
		</line>

	</tileentity>

	<!--ソーラーパネル -->
	<tileentity id = "gt.multitileentity.solarpanel.electric_8eu">
		<line displayname = "機械の注意">
			if(nbt['gt.active'] == undefined){
				return RED + "このブロックの上に非透過ブロックを設置しない";
			}
		</line>

		<line displayname = "機械の状態">
			isRun(nbt);
		</line>

		<line displayname = "EU貯蔵量">
			if(nbt['gt.energy'] != undefined){
				return nbt['gt.energy'] + Unit("EU");
		</line>

	</tileentity>

	<!-- CO2レーザー -->
	<tileentity id = "gt.multitileentity.laser.laser_electric">
		<line displayname = "機械の状態">
			isRun(nbt);
		</line>

		<line displayname = "エネルギー入力">
			return ID2Tier(nbt['gt.mte.id'],"EU","LU",1) + Unit("EU") + "/t" + " - " + "(" + ID2Tier(nbt['gt.mte.id'],"EU","LU",1) / 2 + " ～ " + ID2Tier(nbt['gt.mte.id'],"EU","LU",1) * 2 + ")";
		</line>

		<line displayname = "エネルギー出力">
			return ID2Tier(nbt['gt.mte.id'],"EU","LU",0) + Unit("LU") + "/t" + " - " + "(" + ID2Tier(nbt['gt.mte.id'],"EU","LU",0) / 2 + " ～ " + ID2Tier(nbt['gt.mte.id'],"EU","LU",0) * 2 + ")";
		</line>

	</tileentity>

	<!-- 発電機 -->
	<tileentity id = "gt.multitileentity.dynamo.electric_rotation">
		<line displayname = "機械の状態">
			isRun(nbt);
		</line>

		<line displayname = "エネルギー入力">
			return ID2Tier(nbt['gt.mte.id'],"RU","EU",1) + Unit("RU") + "/t" + " - " + "(" + ID2Tier(nbt['gt.mte.id'],"RU","EU",1) / 2 + " ～ " + ID2Tier(nbt['gt.mte.id'],"RU","EU",1) * 2 + ")";
		</line>

		<line displayname = "エネルギー出力">
			return ID2Tier(nbt['gt.mte.id'],"RU","EU",0) + Unit("EU") + "/t" + " - " + "(" + ID2Tier(nbt['gt.mte.id'],"RU","EU",0) / 2 + " ～ " + ID2Tier(nbt['gt.mte.id'],"RU","EU",0) * 2 + ")";
		</line>

	</tileentity>

	<!-- 量子生成器 -->
	<tileentity  id = "gt.multitileentity.quantumenergizer.quantum_laser">
		<line displayname = "機械の状態">
			isRun(nbt);
		</line>

		<line displayname = "エネルギー入力">
			return ID2Tier(nbt['gt.mte.id'],"LU","QU",1) + Unit("LU") + "/t" + " - " + "(" + ID2Tier(nbt['gt.mte.id'],"LU","QU",1) / 2 + " ～ " + ID2Tier(nbt['gt.mte.id'],"LU","QU",1) * 2 + ")";
		</line>

		<line displayname = "エネルギー出力">
			return ID2Tier(nbt['gt.mte.id'],"LU","QU",0) + Unit("QU") + "/t" + " - " + "(" + ID2Tier(nbt['gt.mte.id'],"LU","QU",0) / 2 + " ～ " + ID2Tier(nbt['gt.mte.id'],"LU","QU",0) * 2 + ")";
		</line>

	</tileentity>

	<!-- クリスタルチャージャー -->
	<tileentity id = "gt.multitileentity.energystorages.crystal_laser">
		<line displayname = "機械の状態">
			isRun(nbt);
		</line>

		<line displayname = "エネルギー出力">
			if(nbt['gt.mode'] != undefined){
				return ID2Tier(nbt['gt.mte.id'],"LU","LU",0) + Unit("LU") + "/t" + " - " + Math.min(nbt['gt.mode'],BatteryBoxArg(nbt,0,0,0)) + Unit("A");
			}
			return ID2Tier(nbt['gt.mte.id'],"LU","LU",0) + Unit("LU") + "/t" + " - " + BatteryBoxArg(nbt,0,0,0) + Unit("A");
		</line>

		<line displayname = "放電しているアイテム">
			return BatteryBoxArg(nbt,0,0,0) + Unit("個");
		</line>

		<line displayname = "充電中のアイテム">
			return BatteryBoxArg(nbt,0,3,0) + Unit("個");
		</line>

		<line displayname = "現在の総LU量">
			return BatteryBoxArg(nbt,0,1,0) + Unit("LU");
		</line>

		<line displayname = "貯蔵LU上限">
			return BatteryBoxArg(nbt,0,2,0) + Unit("LU");
		</line>

	</tileentity>

	<!-- ラージクリスタルチャージャー -->
	<tileentity id = "gt.multitileentity.energystorages.crystal_laser_large">
		<line displayname = "機械の状態">
			isRun(nbt);
		</line>

		<line displayname = "エネルギー出力">
			if(nbt['gt.mode'] != undefined){
				return ID2Tier(nbt['gt.mte.id'],"LU","LU",0) + Unit("LU") + "/t" + " - " + Math.min(nbt['gt.mode'],BatteryBoxArg(nbt,1,0,0)) + Unit("A");
			}
			return ID2Tier(nbt['gt.mte.id'],"LU","LU",0) + Unit("LU") + "/t" + " - " + BatteryBoxArg(nbt,1,0,0) + Unit("A");
		</line>

		<line displayname = "放電しているアイテム">
			return BatteryBoxArg(nbt,1,0,0) + Unit("個");
		</line>

		<line displayname = "充電中のアイテム">
			return BatteryBoxArg(nbt,1,3,0) + Unit("個");
		</line>

		<line displayname = "現在の総LU量">
			return BatteryBoxArg(nbt,1,1,0) + Unit("LU");
		</line>

		<line displayname = "貯蔵LU上限">
			return BatteryBoxArg(nbt,1,2,0) + Unit("LU");
		</line>

	</tileentity>

	<!-- レーザーアブソリューバー -->
	<tileentity id = "gt.multitileentity.laserabsorbers.electric_laser">
		<line displayname = "機械の状態">
			isRun(nbt);
		</line>

		<line displayname = "エネルギー入力">
			return ID2Tier(nbt['gt.mte.id'],"LU","EU",1) + Unit("LU") + "/t" + " - " + "(" + ID2Tier(nbt['gt.mte.id'],"LU","EU",1) / 2 + " ～ " + ID2Tier(nbt['gt.mte.id'],"LU","EU",1) * 2 + ")";
		</line>

		<line displayname = "エネルギー出力">
			return ID2Tier(nbt['gt.mte.id'],"LU","EU",0) + Unit("EU") + "/t" + " - " + "(" + ID2Tier(nbt['gt.mte.id'],"LU","EU",0) / 2 + " ～ " + ID2Tier(nbt['gt.mte.id'],"LU","EU",0) * 2 + ")";
		</line>

	</tileentity>

	<!-- サーモクーラー -->
	<tileentity id = "gt.multitileentity.cooler.cryo_electric">
		<line displayname = "機械の状態">
			isRun(nbt);
		</line>

		<line displayname = "エネルギー入力">
			return ID2Tier(nbt['gt.mte.id'],"EU","CU",1) + Unit("EU") + "/t" + " - " + "(" + ID2Tier(nbt['gt.mte.id'],"EU","CU",1) / 2 + " ～ " + ID2Tier(nbt['gt.mte.id'],"EU","CU",1) * 2 + ")";
		</line>

		<line displayname = "エネルギー出力">
			return ID2Tier(nbt['gt.mte.id'],"EU","CU",0) + Unit("CU") + "/t" + " - " + "(" + ID2Tier(nbt['gt.mte.id'],"EU","CU",0) / 2 + " ～ " + ID2Tier(nbt['gt.mte.id'],"EU","CU",0) * 2 + ")";
		</line>

		<line displayname = "エネルギー出力">
			return ID2Tier(nbt['gt.mte.id'],"EU","HU",0) + Unit("HU") + "/t" + " - " + "(" + ID2Tier(nbt['gt.mte.id'],"EU","HU",0) / 2 + " ～ " + ID2Tier(nbt['gt.mte.id'],"EU","HU",0) * 2 + ")";
		</line>

	</tileentity>

	<!-- パイプ -->
	<tileentity id = "gt.multitileentity.connector.pipe.fluid">
	    <line displayname = "入っている液体/気体">
	    	if(nbt['gt.tank.0']['Amount']!=undefined){
				return fluidName(nbt['gt.tank.0']['FluidName']) + " : " + GREEN+nbt['gt.tank.0']['Amount'] + Unit("L");
			}
		</line>
		<line displayname = "入っている液体/気体">
			if(nbt['gt.tank.1']['Amount']!=undefined){
				return fluidName(nbt['gt.tank.1']['FluidName']) + " : " + GREEN+nbt['gt.tank.1']['Amount'] + Unit("L");
			}
		</line>
		<line displayname = "入っている液体/気体">
			if(nbt['gt.tank.2']['Amount']!=undefined){
				return fluidName(nbt['gt.tank.2']['FluidName']) + " : " + GREEN+nbt['gt.tank.2']['Amount'] + Unit("L");
			}
		</line>
		<line displayname = "入っている液体/気体">
			if(nbt['gt.tank.3']['Amount']!=undefined){
				return fluidName(nbt['gt.tank.3']['FluidName']) + " : " + GREEN+nbt['gt.tank.3']['Amount'] + Unit("L");
			}
		</line>
		<line displayname = "入っている液体/気体">
			if(nbt['gt.tank.4']['Amount']!=undefined){
				return fluidName(nbt['gt.tank.4']['FluidName']) + " : " + GREEN+nbt['gt.tank.4']['Amount'] + Unit("L");
			}
		</line>
		<line displayname = "入っている液体/気体">
			if(nbt['gt.tank.5']['Amount']!=undefined){
				return fluidName(nbt['gt.tank.5']['FluidName']) + " : " + GREEN+nbt['gt.tank.5']['Amount'] + Unit("L");
			}
		</line>
		<line displayname = "入っている液体/気体">
			if(nbt['gt.tank.6']['Amount']!=undefined){
				return fluidName(nbt['gt.tank.6']['FluidName']) + " : " + GREEN+nbt['gt.tank.6']['Amount'] + Unit("L");
			}
		</line>
		<line displayname = "入っている液体/気体">
			if(nbt['gt.tank.7']['Amount']!=undefined){
				return fluidName(nbt['gt.tank.7']['FluidName']) + " : " + GREEN+nbt['gt.tank.7']['Amount'] + Unit("L");
			}
		</line>
		<line displayname = "入っている液体/気体">
			if(nbt['gt.tank.8']['Amount']!=undefined){
				return fluidName(nbt['gt.tank.8']['FluidName']) + " : " + GREEN+nbt['gt.tank.8']['Amount'] + Unit("L");
			}
		</line>
	</tileentity>

	<!-- バーニングボックス   -->
	<tileentity id = "gt.multitileentity.generator.burning_solid">
	    <line displayname = "生産HU">
			if(nbt['gt.energy']!=undefined){
				return nbt['gt.energy']+BLUE+" HU"}
		</line>
		<line displayname = "燃料の状況">
			if(nbt['gt.invlist']['0']['Damage']!=8200)
			if(nbt['gt.invlist']['0']['Damage']!=8201){
				return nbt['gt.invlist']['0']['Count'] + Unit("個") + RED + name(nbt['gt.invlist']['0'])}
		</line>
		<line displayname = "灰の個数">
			switch(nbt['gt.invlist']['0']['Damage']) {
			case 8200:return nbt['gt.invlist']['0']['Count'] + Unit("個") + RED + name(nbt['gt.invlist']['0']);
		  		break;
			case 8201:return nbt['gt.invlist']['0']['Count'] + Unit("個") + RED + name(nbt['gt.invlist']['0']);
		    	break;}
		</line>
		<line displayname = "灰の個数">
			return nbt['gt.invlist']['1']['Count'] + Unit("個") + RED + name(nbt['gt.invlist']['1'])
		</line>
	</tileentity>

	<!-- 岩盤のスプリング -->
	<tileentity id = "gt.multitileentity.fluid.spring">
	    <line displayname = "生成速度">
			var str = ' ';
			var AmountTemp = nbt['gt.spring']['Amount'];
			if(AmountTemp > 20 * 60 * 60 * 24){
				str += parseInt(AmountTemp / (20 * 60 * 60 * 24)) + " 日";
				AmountTemp = AmountTemp % (20 * 60 * 60 * 24);
			}
			if(AmountTemp > 20 * 60 * 60){
				str += parseInt(AmountTemp / (20 * 60 * 60)) + " 時間";
				AmountTemp = AmountTemp % (20 * 60 * 60);
			}
			if(AmountTemp > 20 * 60){
				str += parseInt(AmountTemp / (20 * 60)) + " 分";
				AmountTemp = AmountTemp % (20 * 60);
			}
			if(AmountTemp > 20){
				str += parseInt(AmountTemp / (20)) + " 秒";
				AmountTemp = AmountTemp % (20);
			}
			if(AmountTemp > 0){
				str += parseInt(AmountTemp) + " Tick";
			}

			return str + "/バレル";
		</line>

		<line displayname = "液体の種類">
			if(nbt['gt.spring']['FluidName'] != null){
				return fluidName(nbt['gt.spring']['FluidName']);
			}
		</line>

	</tileentity>

	<!-- シングルブロックタンク -->
	<tileentity id = "gt.multitileentity.tank.barrel.metal">
		<line displayname = "保存されている液体/気体">
			return fluidName(nbt['gt.tank']['FluidName']) + " : " + nbt['gt.tank']['Amount'] + "/" + LiquidCap(nbt) + Unit("L");
		</line>

	</tileentity>

	<!-- マルチブロックタンク(金属) -->
	<tileentity id = "gt.multitileentity.multiblock.tank.metal">
		<line displayname = "保存されている液体/気体">
			return fluidName(nbt['gt.tank']['FluidName']) + " : " + nbt['gt.tank']['Amount'] + "/" + LiquidCap(nbt) + Unit("L");
		</line>

	</tileentity>

	<!-- マルチブロックタンク(木製) -->
	<tileentity id = "gt.multitileentity.multiblock.tank.wooden">
		<line displayname = "保存されている液体/気体">
			return fluidName(nbt['gt.tank']['FluidName']) + " : " + nbt['gt.tank']['Amount'] + "/" + LiquidCap(nbt) + Unit("L");
		</line>

	</tileentity>



	<!-- カプセルセルコンテナ -->
	<tileentity id = "gt.multitileentity.cell">
		<line displayname = "保存されている液体/気体">
			return fluidName(nbt['gt.tank']['FluidName']) + " : " + nbt['gt.tank']['Amount'] + "/1000" + Unit("L");
		</line>

	</tileentity>

	<!-- カップ -->
	<tileentity id = "gt.multitileentity.cup">
		<line displayname = "保存されている液体">
			return fluidName(nbt['gt.tank']['FluidName']) + " : " + nbt['gt.tank']['Amount'] + "/250" + Unit("L");
		</line>

	</tileentity>

	<!-- ジャグ -->
	<tileentity id = "gt.multitileentity.jug">
		<line displayname = "保存されている液体">
			return fluidName(nbt['gt.tank']['FluidName']) + " : " + nbt['gt.tank']['Amount'] + "/2000" + Unit("L");
		</line>

	</tileentity>

	<!-- ポット -->
	<tileentity id = "gt.multitileentity.measuring.pot">
		<line displayname = "保存されている液体">
			return fluidName(nbt['gt.tank']['FluidName']) + " : " + nbt['gt.tank']['Amount'] + "/1000" + Unit("L");
		</line>

	</tileentity>

	<!-- 保温瓶 -->
	<tileentity id = "gt.multitileentity.thermos.can">
		<line displayname = "保存されている液体">
			return fluidName(nbt['gt.tank']['FluidName']) +" : " + nbt['gt.tank']['Amount'] + "/4000" + Unit("L") ;
		</line>

	</tileentity>

	<!-- 木製ベージングポット -->
	<tileentity id = "gt.multitileentity.bathing.pot.wood">
		<line displayname = "搬入されたアイテム1">
			if(nbt['gt.invlist']['0']['s'] == 0){
				return name(nbt['gt.invlist']['0']) + " : " + nbt['gt.invlist']['0']['Count'] + Unit("個");
			}
		</line>

		<line displayname = "搬入されたアイテム2">
			if(nbt['gt.invlist']['1']['s'] == 1){
				return name(nbt['gt.invlist']['1']) + " : " + nbt['gt.invlist']['1']['Count'] + Unit("個");
			}
		</line>

		<line displayname = "搬入されたアイテム3">
			if(nbt['gt.invlist']['2']['s'] == 2){
				return name(nbt['gt.invlist']['2']) + " : " + nbt['gt.invlist']['2']['Count'] + Unit("個");
			}
		</line>

		<line displayname = "搬入されたアイテム4">
			if(nbt['gt.invlist']['3']['s'] == 3){
				return name(nbt['gt.invlist']['3']) + " : " + nbt['gt.invlist']['3']['Count'] + Unit("個");
			}
		</line>

		<line displayname = "搬入されたアイテム5">
			if(nbt['gt.invlist']['4']['s'] == 4){
				return name(nbt['gt.invlist']['4']) + " : " + nbt['gt.invlist']['4']['Count'] + Unit("個");
			}
		</line>

		<line displayname = "搬入されたアイテム6">
			if(nbt['gt.invlist']['5']['s'] == 5){
				return name(nbt['gt.invlist']['5']) + " : " + nbt['gt.invlist']['5']['Count'] + Unit("個");
			}
		</line>

		<line displayname = "搬入された液体">
			return fluidName(nbt['gt.tank.in.0']['FluidName']) + " : " + nbt['gt.tank.in.0']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬出されたアイテム1">
			var i = 0;
			while(i < 12){
				if(nbt['gt.invlist'][i.toString()]['s'] == 6){
					return name(nbt['gt.invlist'][i.toString()]) + " : " +nbt['gt.invlist'][i.toString()]['Count'] + Unit("個");
				}
				i++
			}
		</line>

		<line displayname = "搬出されたアイテム2">
			var i = 0;
			while(i < 12){
				if(nbt['gt.invlist'][i.toString()]['s'] == 7){
					return name(nbt['gt.invlist'][i.toString()]) + " : " +nbt['gt.invlist'][i.toString()]['Count'] + Unit("個");
				}
				i++
			}
		</line>

		<line displayname = "搬出されたアイテム3">
			var i = 0;
			while(i < 12){
				if(nbt['gt.invlist'][i.toString()]['s'] == 8){
					return nbt['gt.invlist'][i.toString()]['Count'] + Unit("個") + name(nbt['gt.invlist'][i.toString()]);
				}
				i++
			}
		</line>

		<line displayname = "搬出されたアイテム4">
			var i = 0;
			while(i < 12){
				if(nbt['gt.invlist'][i.toString()]['s'] == 9){
					return nbt['gt.invlist'][i.toString()]['Count'] + Unit("個") + name(nbt['gt.invlist'][i.toString()]);
				}
				i++
			}
		</line>

		<line displayname = "搬出されたアイテム5">
			var i = 0;
			while(i < 12){
				if(nbt['gt.invlist'][i.toString()]['s'] == 10){
					return name(nbt['gt.invlist'][i.toString()]) + " : " +nbt['gt.invlist'][i.toString()]['Count'] + Unit("個");
				}
				i++
			}
		</line>

		<line displayname = "搬出されたアイテム6">
			var i = 0;
			while(i < 12){
				if(nbt['gt.invlist'][i.toString()]['s'] == 11){
					return name(nbt['gt.invlist'][i.toString()]) + " : " +nbt['gt.invlist'][i.toString()]['Count'] + Unit("個");
				}
				i++
			}
		</line>

		<line displayname = "搬出される液体1">
			return fluidName(nbt['gt.tank.out.0']['FluidName']) + " : " + nbt['gt.tank.out.0']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬出される液体2">
			return fluidName(nbt['gt.tank.out.1']['FluidName']) + " : " + nbt['gt.tank.out.1']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬出される液体3">
			return fluidName(nbt['gt.tank.out.2']['FluidName']) + " : " + nbt['gt.tank.out.2']['Amount'] + Unit("L");
		</line>

	</tileentity>

	<!-- 木製ベージングポットテーブル -->
	<tileentity id = "gt.multitileentity.bathing.pot.table.wood">
		<line displayname = "搬入されたアイテム1">
			if(nbt['gt.invlist']['0']['s'] == 0){
				return name(nbt['gt.invlist']['0']) + " : " + nbt['gt.invlist']['0']['Count'] + Unit("個");
			}
		</line>

		<line displayname = "搬入されたアイテム2">
			if(nbt['gt.invlist']['1']['s'] == 1){
				return name(nbt['gt.invlist']['1']) + " : " + nbt['gt.invlist']['1']['Count'] + Unit("個");
			}
		</line>

		<line displayname = "搬入されたアイテム3">
			if(nbt['gt.invlist']['2']['s'] == 2){
				return name(nbt['gt.invlist']['2']) + " : " + nbt['gt.invlist']['2']['Count'] + Unit("個");
			}
		</line>

		<line displayname = "搬入されたアイテム4">
			if(nbt['gt.invlist']['3']['s'] == 3){
				return name(nbt['gt.invlist']['3']) + " : " + nbt['gt.invlist']['3']['Count'] + Unit("個");
			}
		</line>

		<line displayname = "搬入されたアイテム5">
			if(nbt['gt.invlist']['4']['s'] == 4){
				return name(nbt['gt.invlist']['4']) + " : " + nbt['gt.invlist']['4']['Count'] + Unit("個");
			}
		</line>

		<line displayname = "搬入されたアイテム6">
			if(nbt['gt.invlist']['5']['s'] == 5){
				return name(nbt['gt.invlist']['5']) + " : " + nbt['gt.invlist']['5']['Count'] + Unit("個");
			}
		</line>

		<line displayname = "搬入された液体">
			return fluidName(nbt['gt.tank.in.0']['FluidName']) + " : " + nbt['gt.tank.in.0']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬出されたアイテム1">
			var i = 0;
			while(i < 12){
				if(nbt['gt.invlist'][i.toString()]['s'] == 6){
					return name(nbt['gt.invlist'][i.toString()]) + " : " +nbt['gt.invlist'][i.toString()]['Count'] + Unit("個");
				}
				i++
			}
		</line>

		<line displayname = "搬出されたアイテム2">
			var i = 0;
			while(i < 12){
				if(nbt['gt.invlist'][i.toString()]['s'] == 7){
					return name(nbt['gt.invlist'][i.toString()]) + " : " +nbt['gt.invlist'][i.toString()]['Count'] + Unit("個");
				}
				i++
			}
		</line>

		<line displayname = "搬出されたアイテム3">
			var i = 0;
			while(i < 12){
				if(nbt['gt.invlist'][i.toString()]['s'] == 8){
					return name(nbt['gt.invlist'][i.toString()]) + " : " +nbt['gt.invlist'][i.toString()]['Count'] + Unit("個");
				}
				i++
			}
		</line>

		<line displayname = "搬出されたアイテム4">
			var i = 0;
			while(i < 12){
				if(nbt['gt.invlist'][i.toString()]['s'] == 9){
					return name(nbt['gt.invlist'][i.toString()]) + " : " +nbt['gt.invlist'][i.toString()]['Count'] + Unit("個");
				}
				i++
			}
		</line>

		<line displayname = "搬出されたアイテム5">
			var i = 0;
			while(i < 12){
				if(nbt['gt.invlist'][i.toString()]['s'] == 10){
					return name(nbt['gt.invlist'][i.toString()]) + " : " +nbt['gt.invlist'][i.toString()]['Count'] + Unit("個");
				}
				i++
			}
		</line>

		<line displayname = "搬出されたアイテム6">
			var i = 0;
			while(i < 12){
				if(nbt['gt.invlist'][i.toString()]['s'] == 11){
					return name(nbt['gt.invlist'][i.toString()]) + " : " +nbt['gt.invlist'][i.toString()]['Count'] + Unit("個");
				}
				i++
			}
		</line>

		<line displayname = "搬出される液体1">
			return fluidName(nbt['gt.tank.out.0']['FluidName']) + " : " + nbt['gt.tank.out.0']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬出される液体2">
			return fluidName(nbt['gt.tank.out.1']['FluidName']) + " : " + nbt['gt.tank.out.1']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬出される液体3">
			return fluidName(nbt['gt.tank.out.2']['FluidName']) + " : " + nbt['gt.tank.out.2']['Amount'] + Unit("L");
		</line>

	</tileentity>

	<!-- ベージングポット -->
	<tileentity id = "gt.multitileentity.bathing.pot">
		<line displayname = "搬入されたアイテム1">
			if(nbt['gt.invlist']['0']['s'] == 0){
				return name(nbt['gt.invlist']['0']) + " : " + nbt['gt.invlist']['0']['Count'] + Unit("個");
			}
		</line>

		<line displayname = "搬入されたアイテム2">
			if(nbt['gt.invlist']['1']['s'] == 1){
				return name(nbt['gt.invlist']['1']) + " : " + nbt['gt.invlist']['1']['Count'] + Unit("個");
			}
		</line>

		<line displayname = "搬入されたアイテム3">
			if(nbt['gt.invlist']['2']['s'] == 2){
				return name(nbt['gt.invlist']['2']) + " : " + nbt['gt.invlist']['2']['Count'] + Unit("個");
			}
		</line>

		<line displayname = "搬入されたアイテム4">
			if(nbt['gt.invlist']['3']['s'] == 3){
				return name(nbt['gt.invlist']['3']) + " : " + nbt['gt.invlist']['3']['Count'] + Unit("個");
			}
		</line>

		<line displayname = "搬入されたアイテム5">
			if(nbt['gt.invlist']['4']['s'] == 4){
				return name(nbt['gt.invlist']['4']) + " : " + nbt['gt.invlist']['4']['Count'] + Unit("個");
			}
		</line>

		<line displayname = "搬入されたアイテム6">
			if(nbt['gt.invlist']['5']['s'] == 5){
				return name(nbt['gt.invlist']['5']) + " : " + nbt['gt.invlist']['5']['Count'] + Unit("個");
			}
		</line>

		<line displayname = "搬入された液体">
			return fluidName(nbt['gt.tank.in.0']['FluidName']) + " : " + nbt['gt.tank.in.0']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬出されたアイテム1">
			var i = 0;
			while(i < 12){
				if(nbt['gt.invlist'][i.toString()]['s'] == 6){
					return name(nbt['gt.invlist'][i.toString()]) + " : " +nbt['gt.invlist'][i.toString()]['Count'] + Unit("個");
				}
				i++
			}
		</line>

		<line displayname = "搬出されたアイテム2">
			var i = 0;
			while(i < 12){
				if(nbt['gt.invlist'][i.toString()]['s'] == 7){
					return name(nbt['gt.invlist'][i.toString()]) + " : " +nbt['gt.invlist'][i.toString()]['Count'] + Unit("個");
				}
				i++
			}
		</line>

		<line displayname = "搬出されたアイテム3">
			var i = 0;
			while(i < 12){
				if(nbt['gt.invlist'][i.toString()]['s'] == 8){
					return name(nbt['gt.invlist'][i.toString()]) + " : " +nbt['gt.invlist'][i.toString()]['Count'] + Unit("個");
				}
				i++
			}
		</line>

		<line displayname = "搬出されたアイテム4">
			var i = 0;
			while(i < 12){
				if(nbt['gt.invlist'][i.toString()]['s'] == 9){
					return name(nbt['gt.invlist'][i.toString()]) + " : " +nbt['gt.invlist'][i.toString()]['Count'] + Unit("個");
				}
				i++
			}
		</line>

		<line displayname = "搬出されたアイテム5">
			var i = 0;
			while(i < 12){
				if(nbt['gt.invlist'][i.toString()]['s'] == 10){
					return name(nbt['gt.invlist'][i.toString()]) + " : " +nbt['gt.invlist'][i.toString()]['Count'] + Unit("個");
				}
				i++
			}
		</line>

		<line displayname = "搬出されたアイテム6">
			var i = 0;
			while(i < 12){
				if(nbt['gt.invlist'][i.toString()]['s'] == 11){
					return name(nbt['gt.invlist'][i.toString()]) + " : " +nbt['gt.invlist'][i.toString()]['Count'] + Unit("個");
				}
				i++
			}
		</line>

		<line displayname = "搬出される液体1">
			return fluidName(nbt['gt.tank.out.0']['FluidName']) + " : " + nbt['gt.tank.out.0']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬出される液体2">
			return fluidName(nbt['gt.tank.out.1']['FluidName']) + " : " + nbt['gt.tank.out.1']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬出される液体3">
			return fluidName(nbt['gt.tank.out.2']['FluidName']) + " : " + nbt['gt.tank.out.2']['Amount'] + Unit("L");
		</line>

	</tileentity>

	<!-- ベージングポットテーブル -->
	<tileentity id = "gt.multitileentity.bathing.pot.table">
		<line displayname = "搬入されたアイテム1">
			if(nbt['gt.invlist']['0']['s'] == 0){
				return name(nbt['gt.invlist']['0']) + " : " + nbt['gt.invlist']['0']['Count'] + Unit("個");
			}
		</line>

		<line displayname = "搬入されたアイテム2">
			if(nbt['gt.invlist']['1']['s'] == 1){
				return name(nbt['gt.invlist']['1']) + " : " + nbt['gt.invlist']['1']['Count'] + Unit("個");
			}
		</line>

		<line displayname = "搬入されたアイテム3">
			if(nbt['gt.invlist']['2']['s'] == 2){
				return name(nbt['gt.invlist']['2']) + " : " + nbt['gt.invlist']['2']['Count'] + Unit("個");
			}
		</line>

		<line displayname = "搬入されたアイテム4">
			if(nbt['gt.invlist']['3']['s'] == 3){
				return name(nbt['gt.invlist']['3']) + " : " + nbt['gt.invlist']['3']['Count'] + Unit("個");
			}
		</line>

		<line displayname = "搬入されたアイテム5">
			if(nbt['gt.invlist']['4']['s'] == 4){
				return name(nbt['gt.invlist']['4']) + " : " + nbt['gt.invlist']['4']['Count'] + Unit("個");
			}
		</line>

		<line displayname = "搬入されたアイテム6">
			if(nbt['gt.invlist']['5']['s'] == 5){
				return name(nbt['gt.invlist']['5']) + " : " + nbt['gt.invlist']['5']['Count'] + Unit("個");
			}
		</line>

		<line displayname = "搬入された液体">
			return fluidName(nbt['gt.tank.in.0']['FluidName']) + " : " + nbt['gt.tank.in.0']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬出されたアイテム1">
			var i = 0;
			while(i < 12){
				if(nbt['gt.invlist'][i.toString()]['s'] == 6){
					return name(nbt['gt.invlist'][i.toString()]) + " : " +nbt['gt.invlist'][i.toString()]['Count'] + Unit("個");
				}
				i++
			}
		</line>

		<line displayname = "搬出されたアイテム2">
			var i = 0;
			while(i < 12){
				if(nbt['gt.invlist'][i.toString()]['s'] == 7){
					return name(nbt['gt.invlist'][i.toString()]) + " : " +nbt['gt.invlist'][i.toString()]['Count'] + Unit("個");
				}
				i++
			}
		</line>

		<line displayname = "搬出されたアイテム3">
			var i = 0;
			while(i < 12){
				if(nbt['gt.invlist'][i.toString()]['s'] == 8){
					return name(nbt['gt.invlist'][i.toString()]) + " : " +nbt['gt.invlist'][i.toString()]['Count'] + Unit("個");
				}
				i++
			}
		</line>

		<line displayname = "搬出されたアイテム4">
			var i = 0;
			while(i < 12){
				if(nbt['gt.invlist'][i.toString()]['s'] == 9){
					return name(nbt['gt.invlist'][i.toString()]) + " : " +nbt['gt.invlist'][i.toString()]['Count'] + Unit("個");
				}
				i++
			}
		</line>

		<line displayname = "搬出されたアイテム5">
			var i = 0;
			while(i < 12){
				if(nbt['gt.invlist'][i.toString()]['s'] == 10){
					return name(nbt['gt.invlist'][i.toString()]) + " : " +nbt['gt.invlist'][i.toString()]['Count'] + Unit("個");
				}
				i++
			}
		</line>

		<line displayname = "搬出されたアイテム6">
			var i = 0;
			while(i < 12){
				if(nbt['gt.invlist'][i.toString()]['s'] == 11){
					return name(nbt['gt.invlist'][i.toString()]) + " : " +nbt['gt.invlist'][i.toString()]['Count'] + Unit("個");
				}
				i++
			}
		</line>

		<line displayname = "搬出される液体1">
			return fluidName(nbt['gt.tank.out.0']['FluidName']) + " : " + nbt['gt.tank.out.0']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬出される液体2">
			return fluidName(nbt['gt.tank.out.1']['FluidName']) + " : " + nbt['gt.tank.out.1']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬出される液体3">
			return fluidName(nbt['gt.tank.out.2']['FluidName']) + " : " + nbt['gt.tank.out.2']['Amount'] + Unit("L");
		</line>

	</tileentity>

	<!-- ミキシングボウル -->
	<tileentity id = "gt.multitileentity.mixing.bowl">
		<line displayname = "搬入されたアイテム1">
			if(nbt['gt.invlist']['0']['s'] == 0){
				return name(nbt['gt.invlist']['0']) + " : " + nbt['gt.invlist']['0']['Count'] + Unit("個");
			}
		</line>

		<line displayname = "搬入されたアイテム2">
			if(nbt['gt.invlist']['1']['s'] == 1){
				return name(nbt['gt.invlist']['1']) + " : " + nbt['gt.invlist']['1']['Count'] + Unit("個");
			}
		</line>

		<line displayname = "搬入されたアイテム3">
			if(nbt['gt.invlist']['2']['s'] == 2){
				return name(nbt['gt.invlist']['2']) + " : " + nbt['gt.invlist']['2']['Count'] + Unit("個");
			}
		</line>

		<line displayname = "搬入されたアイテム4">
			if(nbt['gt.invlist']['3']['s'] == 3){
				return name(nbt['gt.invlist']['3']) + " : " + nbt['gt.invlist']['3']['Count'] + Unit("個");
			}
		</line>

		<line displayname = "搬入されたアイテム5">
			if(nbt['gt.invlist']['4']['s'] == 4){
				return name(nbt['gt.invlist']['4']) + " : " + nbt['gt.invlist']['4']['Count'] + Unit("個");
			}
		</line>

		<line displayname = "搬入されたアイテム6">
			if(nbt['gt.invlist']['5']['s'] == 5){
				return name(nbt['gt.invlist']['5']) + " : " + nbt['gt.invlist']['5']['Count'] + Unit("個");
			}
		</line>

		<line displayname = "搬入された液体1">
			return fluidName(nbt['gt.tank.in.0']['FluidName']) + " : " + nbt['gt.tank.in.5']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬入された液体2">
			return fluidName(nbt['gt.tank.in.1']['FluidName']) + " : " + nbt['gt.tank.in.1']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬入された液体3">
			return fluidName(nbt['gt.tank.in.2']['FluidName']) + " : " + nbt['gt.tank.in.2']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬入された液体4">
			return fluidName(nbt['gt.tank.in.3']['FluidName']) + " : " + nbt['gt.tank.in.3']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬入された液体5">
			return fluidName(nbt['gt.tank.in.4']['FluidName']) + " : " + nbt['gt.tank.in.4']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬入された液体6">
			return fluidName(nbt['gt.tank.in.5']['FluidName']) + " : " + nbt['gt.tank.in.5']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬出されたアイテム">
			var i = 0;
			while(i < 7){
				if(nbt['gt.invlist'][i.toString()]['s'] == 6){
					return name(nbt['gt.invlist'][i.toString()]) + " : " +nbt['gt.invlist'][i.toString()]['Count'] + Unit("個");
				}
				i++
			}
		</line>

		<line displayname = "搬出される液体1">
			return fluidName(nbt['gt.tank.out.0']['FluidName']) + " : " + nbt['gt.tank.out.0']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬出される液体2">
			return fluidName(nbt['gt.tank.out.1']['FluidName']) + " : " + nbt['gt.tank.out.1']['Amount'] + Unit("L");
		</line>

	</tileentity>

	<!-- ミキシングボウルテーブル -->
	<tileentity id = "gt.multitileentity.mixing.bowl.table">
		<line displayname = "搬入されたアイテム1">
			if(nbt['gt.invlist']['0']['s'] == 0){
				return name(nbt['gt.invlist']['0']) + " : " + nbt['gt.invlist']['0']['Count'] + Unit("個");
			}
		</line>

		<line displayname = "搬入されたアイテム2">
			if(nbt['gt.invlist']['1']['s'] == 1){
				return name(nbt['gt.invlist']['1']) + " : " + nbt['gt.invlist']['1']['Count'] + Unit("個");
			}
		</line>

		<line displayname = "搬入されたアイテム3">
			if(nbt['gt.invlist']['2']['s'] == 2){
				return name(nbt['gt.invlist']['2']) + " : " + nbt['gt.invlist']['2']['Count'] + Unit("個");
			}
		</line>

		<line displayname = "搬入されたアイテム4">
			if(nbt['gt.invlist']['3']['s'] == 3){
				return name(nbt['gt.invlist']['3']) + " : " + nbt['gt.invlist']['3']['Count'] + Unit("個");
			}
		</line>

		<line displayname = "搬入されたアイテム5">
			if(nbt['gt.invlist']['4']['s'] == 4){
				return name(nbt['gt.invlist']['4']) + " : " + nbt['gt.invlist']['4']['Count'] + Unit("個");
			}
		</line>

		<line displayname = "搬入されたアイテム6">
			if(nbt['gt.invlist']['5']['s'] == 5){
				return name(nbt['gt.invlist']['5']) + " : " + nbt['gt.invlist']['5']['Count'] + Unit("個");
			}
		</line>

		<line displayname = "搬入された液体1">
			return nbt['gt.tank.in.0']['Amount'] + Unit("L") + " : " + fluidName(nbt['gt.tank.in.0']['FluidName']);
		</line>

		<line displayname = "搬入された液体2">
			return nbt['gt.tank.in.1']['Amount'] + Unit("L") + " : " + fluidName(nbt['gt.tank.in.1']['FluidName']);
		</line>

		<line displayname = "搬入された液体3">
			return nbt['gt.tank.in.2']['Amount'] + Unit("L") + " : " + fluidName(nbt['gt.tank.in.2']['FluidName']);
		</line>

		<line displayname = "搬入された液体4">
			return nbt['gt.tank.in.3']['Amount'] + Unit("L") + " : " + fluidName(nbt['gt.tank.in.3']['FluidName']);
		</line>

		<line displayname = "搬入された液体5">
			return nbt['gt.tank.in.4']['Amount'] + Unit("L") + " : " + fluidName(nbt['gt.tank.in.4']['FluidName']);
		</line>

		<line displayname = "搬入された液体6">
			return nbt['gt.tank.in.5']['Amount'] + Unit("L") + " : " + fluidName(nbt['gt.tank.in.5']['FluidName']);
		</line>

		<line displayname = "搬出されたアイテム">
			var i = 0;
			while(i < 7){
				if(nbt['gt.invlist'][i.toString()]['s'] == 6){
					return name(nbt['gt.invlist'][i.toString()]) + " : " +nbt['gt.invlist'][i.toString()]['Count'] + Unit("個");
				}
				i++
			}
		</line>

		<line displayname = "搬出される液体1">
			return nbt['gt.tank.out.0']['Amount'] + Unit("L") + " : " + fluidName(nbt['gt.tank.out.0']['FluidName']);
		</line>

		<line displayname = "搬出される液体2">
			return nbt['gt.tank.out.1']['Amount'] + Unit("L") + " : " + fluidName(nbt['gt.tank.out.1']['FluidName']);
		</line>

	</tileentity>

	<!-- ジューサー-->
	<tileentity id = "gt.multitileentity.juicer">
		<line displayname = "搬出される液体">
			return fluidName(nbt['gt.tank.0']['FluidName']) + " : " +  nbt['gt.tank.0']['Amount'] + Unit("L");
		</line>

	</tileentity>

	<!-- 穴の空いたゴムの原木 -->
	<tileentity id = "gt.multitileentity.tree.rubber.resinhole">
		<line displayname = "木の状態">
			if(nbt['gt.active'] != undefined){
				return BLUE + "樹脂を採取可能";
			}
			return BLUE + "採取不可";
		</line>

	</tileentity>

	<!-- 穴の空いたメープルの原木 -->
	<tileentity id = "gt.multitileentity.tree.maple.saphole">
		<line displayname = "木の状態">
			if(nbt['gt.active'] != undefined){
				return BLUE + "樹液を採取可能";
			}
			return BLUE + "採取不可";
		</line>

	</tileentity>
	<!-- 樹脂/樹液バッグ -->
	<tileentity id = "gt.multitileentity.sapbag">
		<line displayname = "採れるアイテム">
			if(nbt['gt.invlist'] != undefined){
				return name(nbt['gt.invlist']['0']) + " : " + nbt['gt.invlist']['0']['Count'] + "/64" + Unit("個");
			}
			if(nbt['gt.tank'] != undefined){
				return fluidName(nbt['gt.tank']['FluidName']) + " : " + nbt['gt.tank']['Amount'] + "/8000" + Unit("L");
			}
			return "なし";
		</line>

	</tileentity>

	<!-- ダストファンネル -->
	<tileentity id = "gt.multitileentity.funnel.dust">
		<line displayname = "搬出される粉のサイズ">
			switch(nbt['gt.mode']){
				case 0:{return BLUE + "粉ブロック";}
				case 1:{return BLUE + "粉";}
				case 2:{return BLUE + "小さな粉";}
				case 3:{return BLUE + "とても小さな粉";}
				case 4:{return BLUE + "1/72のサイズの粉";}
			}
		</line>
		<line displayname = "入っているアイテム">
			try{
				var mDust = -1;
				var mAmount = 0;
				if(nbt['gt.invlist']['0']['s'] == 0){
					var strT = name(nbt['gt.invlist']['0']);
					if(strT.indexOf("粉ブロック") >= 0){
						mDust = 0;
					}
					else if(strT.indexOf("1/72") >= 0){
						mDust = 4;
					}
					else if(strT.indexOf("とても小さな粉") >= 0){
						mDust = 3;
					}
					else if(strT.indexOf("小さな粉") >= 0){
						mDust = 2;
					}
					else{
						mDust = 1;
					}
					mAmount += nbt['gt.invlist']['0']['Count'];
				}

				if(nbt['gt.materials']['a'] != undefined){
					switch(mDust){
						case 0:{mAmount += parseInt(nbt['gt.materials']['a'] / 420076800 / 9 * 1000) / 1000;break;}
						case 1:{mAmount += parseInt(nbt['gt.materials']['a'] / 420076800 * 1000) / 1000;break;}
						case 2:{mAmount += parseInt(nbt['gt.materials']['a'] / 420076800 * 4 * 1000) / 1000;break;}
						case 3:{mAmount += parseInt(nbt['gt.materials']['a'] / 420076800 * 9 * 1000) / 1000;break;}
						case 4:{mAmount += parseInt(nbt['gt.materials']['a'] / 420076800 * 72 * 1000) / 1000;break;}
						case -1:{
							switch(nbt['gt.mode']){
								case 0:{mAmount += parseInt(nbt['gt.materials']['a'] / 420076800 / 9 * 1000) / 1000;break;}
								case 1:{mAmount += parseInt(nbt['gt.materials']['a'] / 420076800 * 1000) / 1000;break;}
								case 2:{mAmount += parseInt(nbt['gt.materials']['a'] / 420076800 * 4 * 1000) / 1000;break;}
								case 3:{mAmount += parseInt(nbt['gt.materials']['a'] / 420076800 * 9 * 1000) / 1000;break;}
								case 4:{mAmount += parseInt(nbt['gt.materials']['a'] / 420076800 * 72 * 1000) / 1000;break;}
							}
							break;
						}
					}
				}
				if(nbt['gt.invlist']['0']['s'] == 0){
					return name(nbt['gt.invlist']['0']) + " : " + mAmount + Unit("個");
				}
				try{
					switch(nbt['gt.mode']){
						case 0:{return ID2Name(nbt['gt.invlist']['0']['Damage'] + " : " + mAmount + Unit("個"),"storage.dust");}
						case 1:{return ID2Name(nbt['gt.invlist']['0']['Damage'] + " : " + mAmount + Unit("個"),"dust");}
						case 2:{return ID2Name(nbt['gt.invlist']['0']['Damage'] + " : " + mAmount + Unit("個"),"dustSmall");}
						case 3:{return ID2Name(nbt['gt.invlist']['0']['Damage'] + " : " + mAmount + Unit("個"),"dustTiny");}
						case 4:{return ID2Name(nbt['gt.invlist']['0']['Damage'] + " : " + mAmount + Unit("個"),"dustDiv72");}
					}
				}
				catch(e){
					if(nbt['gt.materials']['a'] != undefined){
						return nbt['gt.materials']['i'] +  " : " + parseInt(nbt['gt.materials']['a'] / 420076800 * 1000) / 1000 + Unit("ユニット");
					}
				}
			}
			catch(e){
				if(nbt['gt.invlist']['0']['s'] == 0){
					return name(nbt['gt.invlist']['0']) +  " : " + nbt['gt.invlist']['0']['Count'] + Unit("個");
				}
			}
			return BLUE + "なし";
		</line>

		<line displayname = "アイテムが搬出されます">
			var i = 0;
			while(i < 2){
				if(nbt['gt.invlist'][i.toString()]['s'] == 1){
					return name(nbt['gt.invlist'][i.toString()]) +  " : " + nbt['gt.invlist'][i.toString()]['Count'] + Unit("個");
				}
				i++;
			}
			return BLUE + "なし";
		</line>

		<line displayname = "生産されるアイテム">
			var str = "1" + Unit("個");
			try{
				switch(nbt['gt.mode']){
					case 0:{str += ID2Name(nbt['gt.invlist']['0']['Damage'],"storage.dust");break;}
					case 1:{str += ID2Name(nbt['gt.invlist']['0']['Damage'],"dust");break;}
					case 2:{str += ID2Name(nbt['gt.invlist']['0']['Damage'],"dustSmall");break;}
					case 3:{str += ID2Name(nbt['gt.invlist']['0']['Damage'],"dustTiny");break;}
					case 4:{str += ID2Name(nbt['gt.invlist']['0']['Damage'],"dustDiv72");break;}
				}
				try{
					var i = 0;
					while(i < 2){
						if(nbt['gt.invlist'][i.toString()]['s'] == 1){
							return BLUE + "搬出先にブロックがあり、搬出出来ません";
						}
						i++;
					}
				}
				catch(e){
					return str;
				}
			}
			catch(e){}
		</line>

	</tileentity>

	<!-- グラインドストーン -->
	<tileentity id = "gt.multitileentity.sharpener.grindstone">
		<line displayname = "グラインドストーンの状態">
			if(nbt['gt.state'] > 0){
				return nbt['gt.state'] + Unit("個") + "のアイテムを研磨することが出来ます";
			}
			if(nbt['gt.state'] == 0){
				return RED + "研磨できません、砂を入れて下さい";
			}
		</line>

	</tileentity>

	<!-- シフター -->
	<tileentity id = "gt.multitileentity.sifter.table">
		<line displayname = "ふるいの状態">
			switch(nbt['gt.state']){
				case 0:{return BLUE + "アイテムを搬入して下さい";}
				case 1:{return BLUE + "上部を素手で右クリックして、シフターを動作させます";}
				case 2:{return BLUE + "アイテムを取り出して下さい";}
				case 3:{return BLUE + "アイテムを取り出さないと、次のアイテムをふるいにかけれません";}
			}
		</line>

		<line displayname = "搬入されたアイテム">
			if(nbt['gt.invlist']['0']['s'] == 0){
				return name(nbt['gt.invlist']['0']) +  " : " + nbt['gt.invlist']['0']['Count'] + Unit("個");
			}
			if(nbt['gt.state'] == 2){
				return BLUE + "処理済み";
			}
			return BLUE + "なし";
		</line>
		<line displayname = "搬出されたアイテム1">
			var order = 1;
			if(nbt['gt.invlist']['0']['s'] != 0){
				order -= 1;
			}
			if(nbt['gt.invlist'][order.toString()] != undefined){
				return name(nbt['gt.invlist'][order.toString()]) + " : " + nbt['gt.invlist'][order.toString()]['Count'] + Unit("個");
			}
		</line>

		<line displayname = "搬出されたアイテム2">
			var order = 2;
			if(nbt['gt.invlist']['0']['s'] != 0){
				order -= 1;
			}
			if(nbt['gt.invlist'][order.toString()] != undefined){
				return name(nbt['gt.invlist'][order.toString()]) + " : " + nbt['gt.invlist'][order.toString()]['Count'] + Unit("個");
			}
		</line>

		<line displayname = "搬出されたアイテム3">
			var order = 3;
			if(nbt['gt.invlist']['0']['s'] != 0){
				order -= 1;
			}
			if(nbt['gt.invlist'][order.toString()] != undefined){
				return name(nbt['gt.invlist'][order.toString()]) + " : " + nbt['gt.invlist'][order.toString()]['Count'] + Unit("個");
			}
		</line>

		<line displayname = "搬出されたアイテム4">
			var order = 4;
			if(nbt['gt.invlist']['0']['s'] != 0){
				order -= 1;
			}
			if(nbt['gt.invlist'][order.toString()] != undefined){
				return name(nbt['gt.invlist'][order.toString()]) + " : " + nbt['gt.invlist'][order.toString()]['Count'] + Unit("個");
			}
		</line>

		<line displayname = "搬出されたアイテム5">
			var order = 5;
			if(nbt['gt.invlist']['0']['s'] != 0){
				order -= 1;
			}
			if(nbt['gt.invlist'][order.toString()] != undefined){
				return name(nbt['gt.invlist'][order.toString()]) + " : " + nbt['gt.invlist'][order.toString()]['Count'] + Unit("個");
			}
		</line>

		<line displayname = "搬出されたアイテム6">
			var order = 6;
			if(nbt['gt.invlist']['0']['s'] != 0){
				order -= 1;
			}
			if(nbt['gt.invlist'][order.toString()] != undefined){
				return name(nbt['gt.invlist'][order.toString()]) + " : " + nbt['gt.invlist'][order.toString()]['Count'] + Unit("個");
			}
		</line>

		<line displayname = "搬出されたアイテム7">
			var order = 7;
			if(nbt['gt.invlist']['0']['s'] != 0){
				order -= 1;
			}
			if(nbt['gt.invlist'][order.toString()] != undefined){
				return name(nbt['gt.invlist'][order.toString()]) + " : " + nbt['gt.invlist'][order.toString()]['Count'] + Unit("個");
			}
		</line>

		<line displayname = "搬出されたアイテム8">
			var order = 8;
			if(nbt['gt.invlist']['0']['s'] != 0){
				order -= 1;
			}
			if(nbt['gt.invlist'][order.toString()] != undefined){
				return name(nbt['gt.invlist'][order.toString()]) + " : " + nbt['gt.invlist'][order.toString()]['Count'] + Unit("個");
			}
		</line>

		<line displayname = "搬出されたアイテム9">
			var order = 9;
			if(nbt['gt.invlist']['0']['s'] != 0){
				order -= 1;
			}
			if(nbt['gt.invlist'][order.toString()] != undefined){
				return name(nbt['gt.invlist'][order.toString()]) + " : " + nbt['gt.invlist'][order.toString()]['Count'] + Unit("個");
			}
		</line>

		<line displayname = "搬出されたアイテム10">
			var order = 10;
			if(nbt['gt.invlist']['0']['s'] != 0){
				order -= 1;
			}
			if(nbt['gt.invlist'][order.toString()] != undefined){
				return name(nbt['gt.invlist'][order.toString()]) + " : " + nbt['gt.invlist'][order.toString()]['Count'] + Unit("個");
			}
		</line>

		<line displayname = "搬出されたアイテム11">
			var order = 11;
			if(nbt['gt.invlist']['0']['s'] != 0){
				order -= 1;
			}
			if(nbt['gt.invlist'][order.toString()] != undefined){
				return name(nbt['gt.invlist'][order.toString()]) + " : " + nbt['gt.invlist'][order.toString()]['Count'] + Unit("個");
			}
		</line>

		<line displayname = "搬出されたアイテム12">
			var order = 12;
			if(nbt['gt.invlist']['0']['s'] != 0){
				order -= 1;
			}
			if(nbt['gt.invlist'][order.toString()] != undefined){
				return name(nbt['gt.invlist'][order.toString()]) + " : " + nbt['gt.invlist'][order.toString()]['Count'] + Unit("個");
			}
		</line>

	</tileentity>

	<!-- コイン -->
	<tileentity id = "gt.multitileentity.mold.coins">
	<!-- TODO -->
	</tileentity>

	<!-- コークス炉 -->
	<tileentity id = "gt.multitileentity.multiblock.cokeoven">
		<line displayname = "コークス炉の状態">
			try{
				if(nbt['gt.active'] != undefined){
					return BLUE + "動作中";
				}
				if((nbt['gt.running'] != undefined) && (nbt['gt.invlist']['0']['s'] == 0)){
					if(nbt['gt.invlist']['1']['Count'] == 64){
						return RED + "搬出スロットのアイテムを取り出して下さい";
					}
					return RED + "動作準備完了、火を付けて下さい";
				}
				if((nbt['gt.running'] != 1)){
					return RED + "停止中";
				}
			}
			catch(e){
				return RED + "加工するアイテムを搬入して下さい";
			}
		</line>

		<line displayname = "コークス炉の注意">
			if((nbt['gt.running'] != undefined) && (nbt['gt.invlist']['0']['s'] == 0) && (nbt['gt.active'] != 1)){
				return RED + "着火に失敗した場合、レシピを確認して下さい";
			}
		</line>

		<line displayname = "処理プロセス">
			if(nbt['gt.progress'] != undefined){
				return nbt['gt.progress'] / 20 + Unit("S") + " / " + nbt['gt.maxprogress'] / 20 + Unit("S") + " - " + parseInt(nbt['gt.progress'] * 10000 / nbt['gt.maxprogress']) / 100 + " %";
			}
		</line>

		<line displayname = "生産されるアイテム">
			return name(nbt['gt.invout.0']) + " : " + nbt['gt.invout.0']['Count'] + Unit("個") + " - " + fluidName(nbt['gt.tankout.0']['FluidName']) + " : " + nbt['gt.tankout.0']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬入されたアイテム">
			if(nbt['gt.invlist']['0']['s'] == 0){
				return name(nbt['gt.invlist']['0']) + " : " + nbt['gt.invlist']['0']['Count'] + Unit("個");
			}
		</line>

		<line displayname = "搬出されたアイテム">
			if(nbt['gt.invlist']['0']['s'] == 1){
				return name(nbt['gt.invlist']['0']) + " : " + nbt['gt.invlist']['0']['Count'] + Unit("個");
			}
			else if(nbt['gt.invlist']['1']['s'] == 1){
				return name(nbt['gt.invlist']['1']) + " : " + nbt['gt.invlist']['1']['Count'] + Unit("個");
			}
		</line>

		<line displayname = "搬出される液体">
			return fluidName(nbt['gt.tank.out.0']['FluidName']) + " : " + nbt['gt.tank.out.0']['Amount'] + Unit("L");
		</line>

	</tileentity>

	<!-- 岩石 -->
	<tileentity id = "gt.multitileentity.rock">
		<line displayname = "含まれているアイテム">
			return name(nbt['gt.value']) + " : " + nbt['gt.value']['Count'] + Unit("個");
		</line>

	</tileentity>

	<!-- ベリーブッシュ -->
	<tileentity id = "gt.multitileentity.plant.bush">
		<line displayname = "育ち切る時間">
			if(nbt['gt.state'] != 3){
				var t = 65536 - 128 * (nbt['gt.state'] * 128 + nbt['gt.progress']);
				var str = "";
				if(t > 20 * 60 * 60){
					str += parseInt(t / (20 * 60 * 60)) + " 時間";
					t = t % (20 * 60 * 60);
				}
				if(t > 20 * 60){
					str += parseInt(t / (20 * 60)) + " 分";
					t = t % (20 * 60);
				}
				if(t > 20){
					str += parseInt(t / 20) + " 秒";
					t = t % 20;
				}
				if(t > 0){
					str += t + " Tick";
				}
				return str;
			}
			return AQUA + "成長済み";
		</line>
		<!-->
		<line displayname = "光照提示">
			return AQUA + "请保持莓丛上方没有被不透明方块遮盖 或光照强度大于9";
		</line>

		<line displayname = "雨天提示">
			return AQUA + "下雨时，若莓丛四周有雨水降落，则生长速度加倍";
		</line>
		<-->
		<line displayname = "採れる作物">
			return name(nbt['gt.value']) + " : " + nbt['gt.value']['Count'] + Unit("個");
		</line>

	</tileentity>

	<!-- 蒸留塔 -->
	<tileentity id = "gt.multitileentity.multiblock.distillationtower">
		<line displayname = "機械の状態">
			if(nbt['gt.active'] != undefined){
				return BLUE + "稼働中";
			}
			if(nbt['gt.running'] != undefined){
				if(nbt['gt.mte.id'] < 22000){
					return BLUE + "スタンバイ - エネルギー消費中";
				}
				return BLUE + "スタンバイ";
			}
			return RED + "停止中";
		</line>

		<line displayname = "処理プロセス">
			if(nbt['gt.progress'] != undefined){
				return nbt['gt.progress'] / 20 / nbt['gt.minenergy'] + Unit("S") + " / " + nbt['gt.maxprogress'] / 20 / nbt['gt.minenergy'] + Unit("S") + " - " + parseInt(nbt['gt.progress'] * 10000 / nbt['gt.maxprogress']) / 100 + " %";
			}
		</line>

		<line displayname = "必要エネルギー">
			if(nbt['gt.minenergy'] != undefined){
				return nbt['gt.minenergy'] + Unit(ID2EnergyType(nbt['gt.mte.id']));
			}
		</line>

		<line displayname = "生産されるアイテム">
			return name(nbt['gt.invout.0']) + " : " + nbt['gt.invout.0']['Count'] + Unit("個");
		</line>

		<line displayname = "生産されるアイテム">
			return name(nbt['gt.invout.1']) + " : " + nbt['gt.invout.1']['Count'] + Unit("個");
		</line>

		<line displayname = "生産されるアイテム">
			return name(nbt['gt.invout.2']) + " : " + nbt['gt.invout.2']['Count'] + Unit("個");
		</line>

		<line displayname = "生産される液体/気体">
			return fluidName(nbt['gt.tankout.0']['FluidName']) + " : " + nbt['gt.tankout.0']['Amount'] + Unit("L");
		</line>

		<line displayname = "生産される液体/気体">
			return fluidName(nbt['gt.tankout.1']['FluidName']) + " : " + nbt['gt.tankout.1']['Amount'] + Unit("L");
		</line>

		<line displayname = "生産される液体/気体">
			return fluidName(nbt['gt.tankout.2']['FluidName']) + " : " + nbt['gt.tankout.2']['Amount'] + Unit("L");
		</line>

		<line displayname = "生産される液体/気体">
			return fluidName(nbt['gt.tankout.3']['FluidName']) + " : " + nbt['gt.tankout.3']['Amount'] + Unit("L");
		</line>

		<line displayname = "生産される液体/気体">
			return fluidName(nbt['gt.tankout.4']['FluidName']) + " : " + nbt['gt.tankout.4']['Amount'] + Unit("L");
		</line>

		<line displayname = "生産される液体/気体">
			return fluidName(nbt['gt.tankout.5']['FluidName']) + " : " + nbt['gt.tankout.5']['Amount'] + Unit("L");
		</line>

		<line displayname = "生産される液体/気体">
			return fluidName(nbt['gt.tankout.6']['FluidName']) + " : " + nbt['gt.tankout.6']['Amount'] + Unit("L");
		</line>

		<line displayname = "生産される液体/気体">
			return fluidName(nbt['gt.tankout.7']['FluidName']) + " : " + nbt['gt.tankout.7']['Amount'] + Unit("L");
		</line>

		<line displayname = "生産される液体/気体">
			return fluidName(nbt['gt.tankout.8']['FluidName']) + " : " + nbt['gt.tankout.8']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬入されているアイテム">
			IOInv(nbt,0,'I');
		</line>

		<line displayname = "搬入されている液体">
			return fluidName(nbt['gt.tank.in.0']['FluidName'])+ " : " + nbt['gt.tank.in.0']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬出されるアイテム">
			IOInv(nbt,0,'O');
		</line>

		<line displayname = "搬出されるアイテム">
			IOInv(nbt,1,'O');
		</line>

		<line displayname = "搬出されるアイテム">
			IOInv(nbt,2,'O');
		</line>

		<line displayname = "搬出される液体/気体">
			return fluidName(nbt['gt.tank.out.0']['FluidName']) + " : " + nbt['gt.tank.out.0']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬出される液体/気体">
			return fluidName(nbt['gt.tank.out.1']['FluidName']) + " : " + nbt['gt.tank.out.1']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬出される液体/気体">
			return fluidName(nbt['gt.tank.out.2']['FluidName']) + " : " + nbt['gt.tank.out.2']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬出される液体/気体">
			return fluidName(nbt['gt.tank.out.3']['FluidName']) + " : " + nbt['gt.tank.out.3']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬出される液体/気体">
			return fluidName(nbt['gt.tank.out.4']['FluidName']) + " : " + nbt['gt.tank.out.4']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬出される液体/気体">
			return fluidName(nbt['gt.tank.out.5']['FluidName']) + " : " + nbt['gt.tank.out.5']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬出される液体/気体">
			return fluidName(nbt['gt.tank.out.6']['FluidName']) + " : " + nbt['gt.tank.out.6']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬出される液体/気体">
			return fluidName(nbt['gt.tank.out.7']['FluidName']) + " : " + nbt['gt.tank.out.7']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬出される液体/気体">
			return fluidName(nbt['gt.tank.out.8']['FluidName']) + " : " + nbt['gt.tank.out.8']['Amount'] + Unit("L");
		</line>

	</tileentity>

	<!-- ポンプ -->
	<tileentity id = "gt.multitileentity.pump.rotation">
		<line displayname = "機械の状態">
			if(nbt['gt.active'] != undefined){
				return BLUE + "稼働中";
			}
			if(nbt['gt.running'] != undefined){
				if(nbt['gt.mte.id'] < 22000){
					return BLUE + "スタンバイ - エネルギー消費中";
				}
				return BLUE + "スタンバイ";
			}
			return RED + "停止中";
		</line>

		<line displayname = "処理プロセス">
			if(nbt['gt.progress'] != undefined){
				return nbt['gt.progress'] / 20 / nbt['gt.minenergy'] + Unit("S") + " / " + nbt['gt.maxprogress'] / 20 / nbt['gt.minenergy'] + Unit("S") + " - " + parseInt(nbt['gt.progress'] * 10000 / nbt['gt.maxprogress']) / 100 + " %";
			}
		</line>
	</tileentity>

	<!-- 基本機械 -->
	<tileentity id = "gt.multitileentity.machine.basic">
		<line displayname = "機械の状態">
			if(nbt['gt.active'] != undefined){
				return BLUE + "稼働中";
			}
			if(nbt['gt.running'] != undefined){
				if(nbt['gt.mte.id'] < 22000){
					return BLUE + "スタンバイ - エネルギー消費中";
				}
				return BLUE + "スタンバイ";
			}
			return RED + "停止中";
		</line>

		<line displayname = "処理プロセス">
			if(nbt['gt.progress'] != undefined){
				return nbt['gt.progress'] / 20 / nbt['gt.minenergy'] + Unit("S") + " / " + nbt['gt.maxprogress'] / 20 / nbt['gt.minenergy'] + Unit("S") + " - " + parseInt(nbt['gt.progress'] * 10000 / nbt['gt.maxprogress']) / 100 + " %";
			}
		</line>

		<line displayname = "必要エネルギー">
			if(nbt['gt.minenergy'] != undefined){
				return nbt['gt.minenergy'] + Unit(ID2EnergyType(nbt['gt.mte.id']));
			}
		</line>

		<line displayname = "生産されるアイテム">
			return name(nbt['gt.invout.0']) + " : " + nbt['gt.invout.0']['Count'] + Unit("個");
		</line>

		<line displayname = "生産されるアイテム">
			return name(nbt['gt.invout.1']) + " : " + nbt['gt.invout.1']['Count'] + Unit("個");
		</line>

		<line displayname = "生産されるアイテム">
			return name(nbt['gt.invout.2']) + " : " + nbt['gt.invout.2']['Count'] + Unit("個");
		</line>

		<line displayname = "生産されるアイテム">
			return name(nbt['gt.invout.3']) + " : " + nbt['gt.invout.3']['Count'] + Unit("個");
		</line>

		<line displayname = "生産されるアイテム">
			return name(nbt['gt.invout.4']) + " : " + nbt['gt.invout.4']['Count'] + Unit("個");
		</line>

		<line displayname = "生産されるアイテム">
			return name(nbt['gt.invout.5']) + " : " + nbt['gt.invout.5']['Count'] + Unit("個");
		</line>

		<line displayname = "生産されるアイテム">
			return name(nbt['gt.invout.6']) + " : " + nbt['gt.invout.6']['Count'] + Unit("個");
		</line>

		<line displayname = "生産されるアイテム">
			return name(nbt['gt.invout.7']) + " : " + nbt['gt.invout.7']['Count'] + Unit("個");
		</line>

		<line displayname = "生産されるアイテム">
			return name(nbt['gt.invout.8']) + " : " + nbt['gt.invout.8']['Count'] + Unit("個");
		</line>

		<line displayname = "生産されるアイテム">
			return name(nbt['gt.invout.9']) + " : " + nbt['gt.invout.9']['Count'] + Unit("個");
		</line>

		<line displayname = "生産されるアイテム">
			return name(nbt['gt.invout.10']) + " : " + nbt['gt.invout.10']['Count'] + Unit("個");
		</line>

		<line displayname = "生産されるアイテム">
			return name(nbt['gt.invout.11']) + " : " + nbt['gt.invout.11']['Count'] + Unit("個");
		</line>

		<line displayname = "生産される液体/気体">
			return fluidName(nbt['gt.tankout.0']['FluidName']) + " : " + nbt['gt.tankout.0']['Amount'] + Unit("L");
		</line>

		<line displayname = "生産される液体/気体">
			return fluidName(nbt['gt.tankout.1']['FluidName']) + " : " + nbt['gt.tankout.1']['Amount'] + Unit("L");
		</line>

		<line displayname = "生産される液体/気体">
			return fluidName(nbt['gt.tankout.2']['FluidName']) + " : " + nbt['gt.tankout.2']['Amount'] + Unit("L");
		</line>

		<line displayname = "生産される液体/気体">
			return fluidName(nbt['gt.tankout.3']['FluidName']) + " : " + nbt['gt.tankout.3']['Amount'] + Unit("L");
		</line>

		<line displayname = "生産される液体/気体">
			return fluidName(nbt['gt.tankout.4']['FluidName']) + " : " + nbt['gt.tankout.4']['Amount'] + Unit("L");
		</line>

		<line displayname = "生産される液体/気体">
			return fluidName(nbt['gt.tankout.5']['FluidName']) + " : " + nbt['gt.tankout.5']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬入されているアイテム">
			IOInv(nbt,0,'I');
		</line>

		<line displayname = "搬入されているアイテム">
			IOInv(nbt,1,'I');
		</line>

		<line displayname = "搬入されているアイテム">
			IOInv(nbt,2,'I');
		</line>

		<line displayname = "搬入されているアイテム">
			IOInv(nbt,3,'I');
		</line>

		<line displayname = "搬入されているアイテム">
			IOInv(nbt,4,'I');
		</line>

		<line displayname = "搬入されているアイテム">
			IOInv(nbt,5,'I');
		</line>

		<line displayname = "搬入されているアイテム">
			IOInv(nbt,6,'I');
		</line>

		<line displayname = "搬入されているアイテム">
			IOInv(nbt,7,'I');
		</line>

		<line displayname = "搬入されているアイテム">
			IOInv(nbt,8,'I');
		</line>

		<line displayname = "ブループリント">
			IOInv(nbt,0,'B');
		</line>

		<line displayname = "搬入されている液体">
			return fluidName(nbt['gt.tank.in.0']['FluidName'])+ " : " + nbt['gt.tank.in.0']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬入されている液体">
			return fluidName(nbt['gt.tank.in.1']['FluidName'])+ " : " + nbt['gt.tank.in.1']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬入されている液体">
			return fluidName(nbt['gt.tank.in.2']['FluidName'])+ " : " + nbt['gt.tank.in.2']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬入されている液体">
			return fluidName(nbt['gt.tank.in.3']['FluidName'])+ " : " + nbt['gt.tank.in.3']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬入されている液体">
			return fluidName(nbt['gt.tank.in.4']['FluidName'])+ " : " + nbt['gt.tank.in.4']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬入されている液体">
			return fluidName(nbt['gt.tank.in.5']['FluidName'])+ " : " + nbt['gt.tank.in.5']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬出されるアイテム">
			IOInv(nbt,0,'O');
		</line>

		<line displayname = "搬出されるアイテム">
			IOInv(nbt,1,'O');
		</line>

		<line displayname = "搬出されるアイテム">
			IOInv(nbt,2,'O');
		</line>

		<line displayname = "搬出されるアイテム">
			IOInv(nbt,3,'O');
		</line>

		<line displayname = "搬出されるアイテム">
			IOInv(nbt,4,'O');
		</line>

		<line displayname = "搬出されるアイテム">
			IOInv(nbt,5,'O');
		</line>

		<line displayname = "搬出されるアイテム">
			IOInv(nbt,6,'O');
		</line>

		<line displayname = "搬出されるアイテム">
			IOInv(nbt,7,'O');
		</line>

		<line displayname = "搬出されるアイテム">
			IOInv(nbt,8,'O');
		</line>

		<line displayname = "搬出されるアイテム">
			IOInv(nbt,9,'O');
		</line>

		<line displayname = "搬出されるアイテム">
			IOInv(nbt,10,'O');
		</line>

		<line displayname = "搬出されるアイテム">
			IOInv(nbt,11,'O');
		</line>

		<line displayname = "搬出される液体/気体">
			return fluidName(nbt['gt.tank.out.0']['FluidName']) + " : " + nbt['gt.tank.out.0']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬出される液体/気体">
			return fluidName(nbt['gt.tank.out.1']['FluidName']) + " : " + nbt['gt.tank.out.1']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬出される液体/気体">
			return fluidName(nbt['gt.tank.out.2']['FluidName']) + " : " + nbt['gt.tank.out.2']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬出される液体/気体">
			return fluidName(nbt['gt.tank.out.3']['FluidName']) + " : " + nbt['gt.tank.out.3']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬出される液体/気体">
			return fluidName(nbt['gt.tank.out.4']['FluidName']) + " : " + nbt['gt.tank.out.4']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬出される液体/気体">
			return fluidName(nbt['gt.tank.out.5']['FluidName']) + " : " + nbt['gt.tank.out.5']['Amount'] + Unit("L");
		</line>

	</tileentity>

	<!-- 電気基本機械-->
	<tileentity id = "gt.multitileentity.machine.basic.electric">
		<line displayname = "機械の状態">
			if(nbt['gt.active'] != undefined){
				return BLUE + "稼働中";
			}
			if(nbt['gt.running'] != undefined){
				if(nbt['gt.mte.id'] < 22000){
					return BLUE + "スタンバイ - エネルギー消費中";
				}
				return BLUE + "スタンバイ";
			}
			return RED + "停止中";
		</line>

		<line displayname = "処理プロセス">
			if(nbt['gt.progress'] != undefined){
				return nbt['gt.progress'] / 20 / nbt['gt.minenergy'] + Unit("S") + " / " + nbt['gt.maxprogress'] / 20 / nbt['gt.minenergy'] + Unit("S") + " - " + parseInt(nbt['gt.progress'] * 10000 / nbt['gt.maxprogress']) / 100 + " %";
			}
		</line>

		<line displayname = "要求エネルギー">
			if(nbt['gt.minenergy'] != undefined){
				return nbt['gt.minenergy'] + Unit(ID2EnergyType(nbt['gt.mte.id']));
			}
		</line>

		<line displayname = "生産されるアイテム">
			return name(nbt['gt.invout.0']) +  " : " + nbt['gt.invout.0']['Count'] + Unit("個");
		</line>

		<line displayname = "生産されるアイテム">
			return name(nbt['gt.invout.1']) +  " : " + nbt['gt.invout.1']['Count'] + Unit("個");
		</line>

		<line displayname = "生産されるアイテム">
			return name(nbt['gt.invout.2']) +  " : " + nbt['gt.invout.2']['Count'] + Unit("個");
		</line>

		<line displayname = "生産されるアイテム">
			return name(nbt['gt.invout.3']) +  " : " + nbt['gt.invout.3']['Count'] + Unit("個");
		</line>

		<line displayname = "生産されるアイテム">
			return name(nbt['gt.invout.4']) +  " : " + nbt['gt.invout.4']['Count'] + Unit("個");
		</line>

		<line displayname = "生産されるアイテム">
			return name(nbt['gt.invout.5']) +  " : " + nbt['gt.invout.5']['Count'] + Unit("個");
		</line>

		<line displayname = "生産されるアイテム">
			return name(nbt['gt.invout.6']) +  " : " + nbt['gt.invout.6']['Count'] + Unit("個");
		</line>

		<line displayname = "生産されるアイテム">
			return name(nbt['gt.invout.7']) +  " : " + nbt['gt.invout.7']['Count'] + Unit("個");
		</line>

		<line displayname = "生産されるアイテム">
			return name(nbt['gt.invout.8']) +  " : " + nbt['gt.invout.8']['Count'] + Unit("個");
		</line>

		<line displayname = "生産されるアイテム">
			return name(nbt['gt.invout.9']) +  " : " + nbt['gt.invout.9']['Count'] + Unit("個");
		</line>

		<line displayname = "生産されるアイテム">
			return name(nbt['gt.invout.10']) +  " : " + nbt['gt.invout.10']['Count'] + Unit("個");
		</line>

		<line displayname = "生産されるアイテム">
			return name(nbt['gt.invout.11']) +  " : " + nbt['gt.invout.11']['Count'] + Unit("個");
		</line>

		<line displayname = "生産される液体/気体">
			return fluidName(nbt['gt.tankout.0']['FluidName']) + " : " + nbt['gt.tankout.0']['Amount'] + Unit("L");
		</line>

		<line displayname = "生産される液体/気体">
			return fluidName(nbt['gt.tankout.1']['FluidName']) + " : " + nbt['gt.tankout.1']['Amount'] + Unit("L");
		</line>

		<line displayname = "生産される液体/気体">
			return fluidName(nbt['gt.tankout.2']['FluidName']) + " : " + nbt['gt.tankout.2']['Amount'] + Unit("L");
		</line>

		<line displayname = "生産される液体/気体">
			return fluidName(nbt['gt.tankout.3']['FluidName']) + " : " + nbt['gt.tankout.3']['Amount'] + Unit("L");
		</line>

		<line displayname = "生産される液体/気体">
			return fluidName(nbt['gt.tankout.4']['FluidName']) + " : " + nbt['gt.tankout.4']['Amount'] + Unit("L");
		</line>

		<line displayname = "生産される液体/気体">
			return fluidName(nbt['gt.tankout.5']['FluidName']) + " : " + nbt['gt.tankout.5']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬入されているアイテム">
			IOInv(nbt,0,'I');
		</line>

		<line displayname = "搬入されているアイテム">
			IOInv(nbt,1,'I');
		</line>

		<line displayname = "搬入されているアイテム">
			IOInv(nbt,2,'I');
		</line>

		<line displayname = "搬入されているアイテム">
			IOInv(nbt,3,'I');
		</line>

		<line displayname = "搬入されているアイテム">
			IOInv(nbt,4,'I');
		</line>

		<line displayname = "搬入されているアイテム">
			IOInv(nbt,5,'I');
		</line>

		<line displayname = "搬入されているアイテム">
			IOInv(nbt,6,'I');
		</line>

		<line displayname = "搬入されているアイテム">
			IOInv(nbt,7,'I');
		</line>

		<line displayname = "搬入されているアイテム">
			IOInv(nbt,8,'I');
		</line>

		<line displayname = "ブループリント">
			IOInv(nbt,0,'B');
		</line>

		<line displayname = "搬入されている液体/気体">
			return fluidName(nbt['gt.tank.in.0']['FluidName']) + " : " + nbt['gt.tank.in.0']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬入されている液体/気体">
			return fluidName(nbt['gt.tank.in.1']['FluidName']) + " : " + nbt['gt.tank.in.1']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬入されている液体/気体">
			return fluidName(nbt['gt.tank.in.2']['FluidName']) + " : " + nbt['gt.tank.in.2']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬入されている液体/気体">
			return fluidName(nbt['gt.tank.in.3']['FluidName']) + " : " + nbt['gt.tank.in.3']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬入されている液体/気体">
			return fluidName(nbt['gt.tank.in.4']['FluidName']) + " : " + nbt['gt.tank.in.4']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬入されている液体/気体">
			return fluidName(nbt['gt.tank.in.5']['FluidName']) + " : " + nbt['gt.tank.in.5']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬出されるアイテム">
			IOInv(nbt,0,'O');
		</line>

		<line displayname = "搬出されるアイテム">
			IOInv(nbt,1,'O');
		</line>

		<line displayname = "搬出されるアイテム">
			IOInv(nbt,2,'O');
		</line>

		<line displayname = "搬出されるアイテム">
			IOInv(nbt,3,'O');
		</line>

		<line displayname = "搬出されるアイテム">
			IOInv(nbt,4,'O');
		</line>

		<line displayname = "搬出されるアイテム">
			IOInv(nbt,5,'O');
		</line>

		<line displayname = "搬出されるアイテム">
			IOInv(nbt,6,'O');
		</line>

		<line displayname = "搬出されるアイテム">
			IOInv(nbt,7,'O');
		</line>

		<line displayname = "搬出されるアイテム">
			IOInv(nbt,8,'O');
		</line>

		<line displayname = "搬出されるアイテム">
			IOInv(nbt,9,'O');
		</line>

		<line displayname = "搬出されるアイテム">
			IOInv(nbt,10,'O');
		</line>

		<line displayname = "搬出されるアイテム">
			IOInv(nbt,11,'O');
		</line>

		<line displayname = "搬出される液体/気体">
			return fluidName(nbt['gt.tank.out.0']['FluidName']) + " : " + nbt['gt.tank.out.0']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬出される液体/気体">
			return fluidName(nbt['gt.tank.out.1']['FluidName']) + " : " + nbt['gt.tank.out.1']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬出される液体/気体">
			return fluidName(nbt['gt.tank.out.2']['FluidName']) + " : " + nbt['gt.tank.out.2']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬出される液体/気体">
			return fluidName(nbt['gt.tank.out.3']['FluidName']) + " : " + nbt['gt.tank.out.3']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬出される液体/気体">
			return fluidName(nbt['gt.tank.out.4']['FluidName']) + " : " + nbt['gt.tank.out.4']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬出される液体/気体">
			return fluidName(nbt['gt.tank.out.5']['FluidName']) + " : " + nbt['gt.tank.out.5']['Amount'] + Unit("L");
		</line>

	</tileentity>

	<!-- ラージ遠心分離機 -->
	<tileentity id = "gt.multitileentity.multiblock.centrifuge">
		<line displayname = "機械の状態">
			if(nbt['gt.active'] != undefined){
				return BLUE + "稼働中";
			}
			if(nbt['gt.running'] != undefined){
				if(nbt['gt.mte.id'] < 22000){
					return BLUE + "スタンバイ - エネルギー消費中";
				}
				return BLUE + "スタンバイ";
			}
			return RED + "停止中";
		</line>

		<line displayname = "処理プロセス">
			if(nbt['gt.progress'] != undefined){
				return nbt['gt.progress'] / 20 / nbt['gt.minenergy'] + Unit("S") + " / " + nbt['gt.maxprogress'] / 20 / nbt['gt.minenergy'] + Unit("S") + " - " + parseInt(nbt['gt.progress'] * 10000 / nbt['gt.maxprogress']) / 100 + " %";
			}
		</line>

		<line displayname = "要求エネルギー">
			if(nbt['gt.minenergy'] != undefined){
				return nbt['gt.minenergy'] + Unit(ID2EnergyType(nbt['gt.mte.id']));
			}
		</line>

		<line displayname = "生産されるアイテム">
			return name(nbt['gt.invout.0']) +  " : " + nbt['gt.invout.0']['Count'] + Unit("個");
		</line>

		<line displayname = "生産されるアイテム">
			return name(nbt['gt.invout.1']) +  " : " + nbt['gt.invout.1']['Count'] + Unit("個");
		</line>

		<line displayname = "生産されるアイテム">
			return name(nbt['gt.invout.2']) +  " : " + nbt['gt.invout.2']['Count'] + Unit("個");
		</line>

		<line displayname = "生産されるアイテム">
			return name(nbt['gt.invout.3']) +  " : " + nbt['gt.invout.3']['Count'] + Unit("個");
		</line>

		<line displayname = "生産されるアイテム">
			return name(nbt['gt.invout.4']) +  " : " + nbt['gt.invout.4']['Count'] + Unit("個");
		</line>

		<line displayname = "生産されるアイテム">
			return name(nbt['gt.invout.5']) +  " : " + nbt['gt.invout.5']['Count'] + Unit("個");
		</line>

		<line displayname = "生産される液体/気体">
			return fluidName(nbt['gt.tankout.0']['FluidName']) + " : " + nbt['gt.tankout.0']['Amount'] + Unit("L");
		</line>

		<line displayname = "生産される液体/気体">
			return fluidName(nbt['gt.tankout.1']['FluidName']) + " : " + nbt['gt.tankout.1']['Amount'] + Unit("L");
		</line>

		<line displayname = "生産される液体/気体">
			return fluidName(nbt['gt.tankout.2']['FluidName']) + " : " + nbt['gt.tankout.2']['Amount'] + Unit("L");
		</line>

		<line displayname = "生産される液体/気体">
			return fluidName(nbt['gt.tankout.3']['FluidName']) + " : " + nbt['gt.tankout.3']['Amount'] + Unit("L");
		</line>

		<line displayname = "生産される液体/気体">
			return fluidName(nbt['gt.tankout.4']['FluidName']) + " : " + nbt['gt.tankout.4']['Amount'] + Unit("L");
		</line>

		<line displayname = "生産される液体/気体">
			return fluidName(nbt['gt.tankout.5']['FluidName']) + " : " + nbt['gt.tankout.5']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬入されているアイテム">
			IOInv(nbt,0,'I');
		</line>

		<line displayname = "搬入されているアイテム">
			IOInv(nbt,1,'I');
		</line>

		<line displayname = "搬入されているアイテム">
			IOInv(nbt,2,'I');
		</line>

		<line displayname = "搬入されているアイテム">
			IOInv(nbt,3,'I');
		</line>

		<line displayname = "搬入されているアイテム">
			IOInv(nbt,4,'I');
		</line>

		<line displayname = "搬入されているアイテム">
			IOInv(nbt,5,'I');
		</line>

		<line displayname = "搬入されている液体/気体">
			return fluidName(nbt['gt.tank.in.0']['FluidName']) + " : " + nbt['gt.tank.in.0']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬出されるアイテム">
			IOInv(nbt,0,'O');
		</line>

		<line displayname = "搬出されるアイテム">
			IOInv(nbt,1,'O');
		</line>

		<line displayname = "搬出されるアイテム">
			IOInv(nbt,2,'O');
		</line>

		<line displayname = "搬出されるアイテム">
			IOInv(nbt,3,'O');
		</line>

		<line displayname = "搬出されるアイテム">
			IOInv(nbt,4,'O');
		</line>

		<line displayname = "搬出されるアイテム">
			IOInv(nbt,5,'O');
		</line>

		<line displayname = "搬出される液体/気体">
			return fluidName(nbt['gt.tank.out.0']['FluidName']) + " : " + nbt['gt.tank.out.0']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬出される液体/気体">
			return fluidName(nbt['gt.tank.out.1']['FluidName']) + " : " + nbt['gt.tank.out.1']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬出される液体/気体">
			return fluidName(nbt['gt.tank.out.2']['FluidName']) + " : " + nbt['gt.tank.out.2']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬出される液体/気体">
			return fluidName(nbt['gt.tank.out.3']['FluidName']) + " : " + nbt['gt.tank.out.3']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬出される液体/気体">
			return fluidName(nbt['gt.tank.out.4']['FluidName']) + " : " + nbt['gt.tank.out.4']['Amount'] + Unit("L");
		</line>

		<line displayname = "搬出される液体/気体">
			return fluidName(nbt['gt.tank.out.5']['FluidName']) + " : " + nbt['gt.tank.out.5']['Amount'] + Unit("L");
		</line>

	</tileentity>

	<!-- 岩盤ドリル -->
	<tileentity id = "gt.multitileentity.multiblock.drill.bedrock">
		<line displayname = "潤滑油の種類">
			return fluidName(nbt['gt.tank.0']['FluidName']);
		</line>

		<line displayname = "潤滑油の量">
			return + nbt['gt.tank.0']['Amount'] + Unit("L");
		</line>

	</tileentity>

</oo>
