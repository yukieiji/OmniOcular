<!--Date: 2018/07/31-->
<!--Version: 6.07.24-->
<!-- yukieiji -->
<oo> 
    <!-- ID to EnergyTier -->
	<!-- HU SU - ボイラー,SU KU - 蒸気エンジン,EU KU - 電気エンジン,SU RU - 蒸気タービン,EU HU - 電気ヒーター, -->
	<!-- EU RU - 電気モーター,EU MU - 電磁石,EU EU - 変圧器,EU EU - バッテリーボックス,EU LU - CO2レーザー, -->
	<!-- RU EU - 発電機,LU QU - 量子生成器, LU LU - クリスタルチャージャー,LU EU - レーザーアブソリューバー,EU CU HU - 半导体制冷器, -->
    
    <init>
		function ID2Tier(mID,mInput,mOutput,isInput){
			var tInput = 0;
			var tOutput = 0;

			if(mInput == "HU"){
				if(mOutput == "SU"){
					if(mID >= 1250){
						tInput = 4 * ID2Tier(mID - 50,"HU","SU",1);
					}
					else if(mID >= 1200){
						switch(mID){
							case 1200:{tInput = 16;break;}
							case 1201:{tInput = 20;break;}
							case 1202:{tInput = 24;break;}
							case 1203:{tInput = 16;break;}
							case 1204:{tInput = 32;break;}
							case 1205:{tInput = 96;break;}
							case 1206:{tInput = 112;break;}
							case 1207:{tInput = 128;break;}
							case 1208:{tInput = 128;break;}
						}
					}

					tOutput = tInput * 2;
				}
			}
			if(mInput == "SU"){
				if(mOutput == "KU"){
					if(mID > 1311){
						tOutput = 4 * ID2Tier(mID - 50,"SU","KU",0);
					}
					else if(mID >= 1300){
						switch(mID){
							case 1300:{tOutput = 8;break;}
							case 1301:{tOutput = 10;break;}
							case 1302:{tOutput = 12;break;}
							case 1303:{tOutput = 8;break;}
							case 1304:{tOutput = 16;break;}
							case 1305:{tOutput = 48;break;}
							case 1306:{tOutput = 56;break;}
							case 1307:{tOutput = 64;break;}
							case 1308:{tOutput = 64;break;}
							case 1309:{tOutput = 12;break;}
							case 1310:{tOutput = 8;break;}
							case 1311:{tOutput = 32;break;}
						}
					}

					tInput = parseInt(tOutput * 2 * 10000 / SteamEff(mID));
				}
				if(mOutput == "RU"){
					switch(mID){
						case 1512:{tOutput = 16;break;}
						case 1515:{tOutput = 24;break;}
						case 1518:{tOutput = 32;break;}
						case 1522:{tOutput = 64;break;}
						case 1525:{tOutput = 96;break;}
						case 1527:{tOutput = 128;break;}
						case 1528:{tOutput = 128;break;}
						case 1529:{tOutput = 128;break;}
						case 1530:{tOutput = 256;break;}
						case 1531:{tOutput = 256;break;}
						case 1535:{tOutput = 384;break;}
						case 1538:{tOutput = 512;break;}
						case 1540:{tOutput = 768;break;}
						case 1545:{tOutput = 1024;break;}
						case 1548:{tOutput = 2048;break;}
					}

					tInput = tOutput * 3;
				}
			}
			if(mInput == "EU"){
				if(mOutput == "KU"){
					tInput = 8 * Math.pow(4,(mID % 10010));
					tOutput = tInput / 2;
				}
				if(mOutput == "HU"){
					if(mID >= 10160){
						tInput = 8 * Math.pow(4,(mID % 10160));
						tOutput = tInput / 4;
					}
					else if(mID >= 10000){
						tInput = 8 * Math.pow(4,(mID % 10000));
						tOutput = tInput / 2;
					}
				}
				if(mOutput == "RU"){
					tInput = 8 * Math.pow(4,(mID % 10020));
					tOutput = tInput / 2;
				}
				if(mOutput == "MU"){
					tInput = 8 * Math.pow(4,(mID % 10030));
					tOutput = tInput / 2;
				}
				if(mOutput == "EU"){
					if(mID >= 10090){
						tInput = 8 * Math.pow(4,(mID % 10090));
						tOutput = tInput;
					}
					else if(mID >= 10080){
						tInput = 8 * Math.pow(4,(mID % 10080));
						tOutput = tInput;
					}
					else if(mID >= 10040){
						tOutput = 8 * Math.pow(4,(mID % 10040));
						tInput = tOutput * 4;
					}
				}
				if(mOutput == "LU"){
					tInput = 8 * Math.pow(4,(mID % 10100));
					tOutput = tInput / 2;
				}
				if(mOutput == "CU"){
					if(mID >= 10160){
						tInput = 8 * Math.pow(4,(mID % 10160));
						tOutput = tInput / 4;
					}
				}
			}
			if(mInput == "RU"){
				if(mOutput == "EU"){
					tInput = 8 * Math.pow(4,(mID % 10110));
					tOutput = parseInt(tInput * 6875 / 10000);
				}
			}
			if(mInput == "LU"){
				if(mOutput == "QU"){
					tInput = 8 * Math.pow(4,(mID % 10120));
					tOutput = tInput / 2;
				}
				if(mOutput == "LU"){
					if(mID >= 10140){
						tInput = 8 * Math.pow(4,(mID % 10140));
						tOutput = tInput;
					}
					else if(mID >= 10130){
						tInput = 8 * Math.pow(4,(mID % 10130));
						tOutput = tInput;
					}
				}
				if(mOutput == "EU"){
					tInput = 8 * Math.pow(4,(mID % 10150));
					tOutput = tInput / 2;
				}
			}

			if(isInput == 1){
				return tInput;
			}
			else if(isInput == 0){
				return tOutput;
			}
		}
	</init>

	<!-- ボイラーの爆発範囲 -->
	<init>
		function ExplodeRoundSU(cap){
			if((Math.sqrt(cap) / 100) > 1){
				return parseInt((Math.sqrt(cap) / 100));
			}
			return 1;
		}
	</init>

	<!-- 熱ダメージ計算 -->
	<init>
		function HeatDamageSU(enCap,SUCap,isChisel){
			if(isChisel == 0){
				if(parseInt((enCap + SUCap / 2) / 2000) < 10){
					return parseInt((enCap + SUCap / 2) / 2000);
				}
				return 10;
			}
			return parseInt((enCap + SUCap / 2) / 2000)
		}
	</init>

	<!-- 蒸気エンジン効率 -->
	<init>
		function SteamEff(mID){
			if(mID >= 1350){
				return SteamEff(mID - 50);
			}
			switch(mID){
				case 1300:{return 3000;}
				case 1301:{return 4000;}
				case 1302:{return 5000;}
				case 1303:{return 6400;}
				case 1304:{return 5000;}
				case 1305:{return 6300;}
				case 1306:{return 5800;}
				case 1307:{return 5800;}
				case 1308:{return 6000;}
				case 1309:{return 5000;}
				case 1310:{return 6450;}
				case 1311:{return 6200;}
			}
		}
	</init>

	<!-- ボイラー容量 -->
	<init>
		function SteamCap(SC){
			return ID2Tier(SC['gt.mte.id'],"HU","SU",1) * 10000;
		}
	</init>

	<!-- 上限と下限 -->
	<init>
		function bind(aMin,aMax,aValue){
			return Math.max(aMin,Math.min(aMax,aValue));
		}
	</init>

	<!-- バッテリーボックスの状態 -->
	<init>
		function BatteryBoxArg(BBA,isLarge,ArgType,isEU){
			var BatteryAmount = 0;
			var EUAmount = 0;
			var BatteryCap = 0;
			var BatteryIDArg = 200;
			var BatteryIDArg_2 = 14000;
			var BatteryBoxArg_0 = 10080;
			var BatteryBoxArg_1	= 10090;
			var errorAmount = 0;

			if(isEU != 1){
				BatteryIDArg = 210;
				BatteryIDArg_2 = 14500;
				BatteryBoxArg_0 = 10130;
				BatteryBoxArg_1 = 10140;
			}

			for (var i = 0; i < 16;i++) {
				if(isLarge != 1){
					if(i >= 4){
						break;
					}
				}
				if(BBA['gt.invlist'][i.toString()] != undefined){
					try{
						if((BBA['gt.invlist'][i.toString()]['Damage'] >= 20100) && (parseInt((BBA['gt.invlist'][i.toString()]['Damage'] / 100) % BatteryIDArg) == (BBA['gt.mte.id'] % BatteryBoxArg_0) || parseInt((BBA['gt.invlist'][i.toString()]['Damage'] / 100) % BatteryIDArg) == (BBA['gt.mte.id'] % BatteryBoxArg_1))){
							if(BBA['gt.invlist'][i.toString()]['tag'] != undefined){
								EUAmount += BBA['gt.invlist'][i.toString()]['tag']['gt.energy'];
							}
							BatteryAmount++;
							if(isEU == 1){
								BatteryCap += ID2Cap(BBA['gt.invlist'][i.toString()]['Damage'],"EU");
								}else{
									BatteryCap += ID2Cap(BBA['gt.invlist'][i.toString()]['Damage'],"LU");
							}
						}
						else if((BBA['gt.invlist'][i.toString()]['Damage'] >= 14000) && (BBA['gt.invlist'][i.toString()]['Damage'] <= 14515) && (parseInt((BBA['gt.invlist'][i.toString()]['Damage'] % BatteryIDArg_2) % 10) == (BBA['gt.mte.id'] % BatteryBoxArg_0) || parseInt((BBA['gt.invlist'][i.toString()]['Damage'] % BatteryIDArg_2) % 10) == (BBA['gt.mte.id'] % BatteryBoxArg_1))){
							if(BBA['gt.invlist'][i.toString()]['tag'] != undefined){
								EUAmount += BBA['gt.invlist'][i.toString()]['tag']['gt.energy'];
							}
							BatteryAmount++;
							if(isEU == 1){
								BatteryCap += ID2Cap(BBA['gt.invlist'][i.toString()]['Damage'],"EU");
							}else{
								BatteryCap += ID2Cap(BBA['gt.invlist'][i.toString()]['Damage'],"LU");
							}
						}
						else{
							errorAmount++;
						}
					}
					catch(e){
						errorAmount++;
					}
				}
			}

			switch(ArgType){
				case 0:{return BatteryAmount;}
				case 1:{return EUAmount;}
				case 2:{return BatteryCap;}
				case 3:{return errorAmount;}
			}
		}
	</init>

	<!-- バッテリー容量 -->
	<init>
		function ID2Cap(mID,mInput){
			if(mInput == "EU"){
				if(mID >= 14100){
					if(mID > 20300){
						return 16 * ID2Cap(mID - 200,"EU");
					}
					if(mID > 20200){
						return 4 * ID2Cap(mID - 100,"EU");
					}
					switch(mID){
						case 20101:{return 32000;}
						case 20102:{return 48000;}
						case 20103:{return 64000;}
						case 20104:{return 8000;}
						case 20105:{return 16000;}
						case 20106:{return 16000;}
						case 20107:{return 16000;}
					}
				}
				else{
					if(mID >= 14020){
						return 2 * ID2Cap(mID - 20,"EU");
					}
					if(mID >= 14010){
						return 2 * ID2Cap(mID - 10,"EU");
					}
					switch(mID){
						case 14000:{return 16000;}
						case 14001:{return 64000;}
						case 14002:{return 256000;}
						case 14003:{return 1024000;}
						case 14004:{return 4096000;}
					}
				}
			}
			if(mInput == "LU"){
				if(mID >= 14510){
					return 2 * ID2Cap(mID - 10,"LU");
				}
				return 3200000 * Math.pow(4,parseInt(mID % 14500));
			}
		}
	</init>

	<!-- 機械の状態 -->
	<init>
		function isRun(iR){
			if(iR['gt.active.energy'] != undefined){
				return GREEN + "動作中";
			}
			if((iR['gt.active'] != undefined)||(iR['gt.can.energy'] != undefined)){
				return BLUE + "スタンバイ";
			}
			return RED + "停止中";
		}
	</init>

	<!-- エネルギーの単位 -->
	<init>
		function Unit(Type){
			switch(Type){
				case "EU":{return BLUE + " EU" + WHITE;}
				case "RU":{return GREEN + " RU" + WHITE;}
				case "KU":{return DGREEN + " KU" + WHITE;}
				case "HU":{return RED + " HU" + WHITE;}
				case "CU":{return AQUA + " CU" + WHITE;}
				case "LU":{return YELLOW + " LU" + WHITE;}
				case "MU":{return DGRAY + " MU" + WHITE;}
				case "NU":{return BLACK + " NU" + WHITE;}
				case "QU":{return DPURPLE + " QU" + WHITE;}
				case "TU":{return DBLUE + " TU" + WHITE;}
				case "RF":{return DRED + " RF" + WHITE;}
				case "MJ":{return DRED + " MJ" + WHITE;}
				case "SU":{return GRAY + " SU" + WHITE;}
				case "AU":{return WHITE + " AU" + WHITE;}
				case "ORDO":{return WHITE + " Ordo" + WHITE;}
				case "AER":{return YELLOW + " Aer" + WHITE;}
				case "AQUA":{return AQUA + " Aqua" + WHITE;}
				case "TERRA":{return GREEN + " Terra" + WHITE;}
				case "IGNIS":{return RED + " Ignis" + WHITE;}
				case "PERDITIO":{return BLACK + " Perditio" + WHITE;}
				case "L":{return AQUA + " L" + WHITE;}
				case "A":{return AQUA + " A" + WHITE;}
				case "Angle":{return DAQUA + " °" + WHITE;}
				case "個":{return AQUA + " 個 " + WHITE;}
				case "ユニット":{return AQUA + " ユニット" + WHITE;}
				case "K":{return AQUA + " K" + WHITE;}
				case "種類":{return AQUA + " 種類" + WHITE;}
				case "S":{return AQUA + " S" + WHITE;}
				case "個":{return AQUA + " 個" + WHITE;}
			}
		}
	</init>

	<!-- タンク容量 -->
	<init>
		function LiquidCap(LC){
			switch(LC['gt.mte.id']){
				case 32733:{return 8000;}
				case 32752:{return 8000;}
				case 32753:{return 8000;}
				case 32754:{return 8000;}
				case 32714:{return 16000;}
				case 32734:{return 32000;}
				case 32715:{return 32000;}
				case 32716:{return 64000;}
				case 32742:{return 128000;}
				case 32717:{return 256000;}
				case 32718:{return 256000;}
				case 32719:{return 4096000;}
				case 17001:{return 432000;}
				case 17002:{return 1728000;}
				case 17006:{return 3456000;}
				case 17003:{return 6912000;}
				case 17004:{return 6912000;}
				case 17005:{return 110592000;}
				case 17022:{return 6912000;}
				case 17026:{return 13824000;}
				case 17023:{return 27648000;}
				case 17024:{return 27648000;}
				case 17025:{return 442368000;}
			}
		}
	</init>

	<!-- るつぼの温度上限 -->
	<init>
		function KevinCap(Kevin){
			switch(Kevin){
				case 1000:{return 1375;}
				case 1001:{return 2091;}
				case 1002:{return 1875;}
				case 1003:{return 1875;}
				case 1004:{return 2250;}
				case 1005:{return 2500;}
				case 1019:{return 4750;}
				case 1020:{return 1696;}
				case 1021:{return 2395;}
				case 1022:{return 2557;}
				case 1041:{return 2341;}
				case 1025:{return 2428;}
				case 1026:{return 2807;}
				case 1031:{return 2513;}
				case 1032:{return 2807;}
				case 1027:{return 2682;}
				case 1028:{return 3695;}
				case 1029:{return 2888;}
				case 1023:{return 2426;}
				case 1033:{return 2725;}
				case 1034:{return 3620;}
				case 1035:{return 3437;}
				case 1036:{return 4112;}
				case 1037:{return 4132;}
				case 1039:{return 3398;}
				case 1040:{return 2931;}
				case 1038:{return 2728;}
				case 1024:{return 4618;}
				case 1030:{return 3750;}
				case 1048:{return 5000;}
				case 1049:{return 6781;}
				default :{
					if(Kevin >= 1750){
						return KevinCap(Kevin - 750);
					}
					if(Kevin >= 1050){
						return KevinCap(Kevin - 50);
					}
				}
			}
		}
	</init>

	<!-- アイテム名取得 -->
	<init>
		function getName(mID,Type){
			try{
				return ID2Name(mID,Type);
			}
			catch(e){
				return mID;
			}
		}

	</init>

	<!-- 機械のエネルギーの単位 -->
	<init>
		function ID2EnergyType(mID){
			if(mID > 20000 && mID < 21000){
				switch(parseInt(mID / 10) % 2000){
					case 0:{return "HU";}
					case 1:{return "RU";}
					case 2:{return "KU";}
					case 4:{return "RU";}
					case 5:{return "KU";}
					case 6:{return "RU";}
					case 7:{return "KU";}
					case 8:{return "RU";}
					case 9:{return "EU";}
					case 10:{return "KU";}
					case 11:{return "RU";}
					case 12:{return "RU";}
					case 13:{return "RU";}
					case 14:{return "RU";}
					case 15:{return "RU";}
					case 16:{return "EU";}
					case 17:{return "HU";}
					case 18:{return "RU";}
					case 19:{return "HU";}
					case 20:{return "HU";}
					case 21:{return "RU";}
					case 22:{return "MU";}
					case 23:{return "KU";}
					case 24:{return "HU";}
					case 25:{return "HU";}
					case 26:{return "EU";}
					case 27:{return "EU";}
					case 28:{return "EU";}
					case 29:{return "RU";}
					case 30:{return "MU";}
					case 31:{return "HU";}
					case 32:{return "LU";}
					case 33:{return "LU";}
					case 34:{return "EU";}
					case 35:{return "EU";}
					case 36:{return "EU";}
					case 37:{return "EU";}
					case 38:{return "EU";}
					case 39:{return "HU";}
					case 41:{return "QU";}
					case 42:{return "QU";}
					case 43:{return "QU";}
					case 51:{return "RU";}
					case 52:{return "RU";}
					case 53:{return "EU";}
					case 54:{return "EU";}
					case 55:{return "RU";}
					case 56:{return "CU";}
					case 57:{return "CU";}
					case 58:{return "EU";}
					case 59:{return "EU";}
				}
			}
			switch(mID){
				case 22000:{return "TU";}
				case 22001:{return "TU";}
				case 22002:{return "TU";}
				case 22003:{return "HU";}
				case 22004:{return "TU";}
			}
		}
	</init>

	<!-- 加工机器物品存储 -->
	<init>
		function IOInv(nbt,solt,IO){
			var inAmount;
			var outAmount;
			var blueprint = 0;
			var mID = nbt['gt.mte.id'];
			if(mID > 20000 && mID < 21000){
				switch(parseInt(mID / 10) % 2000){
					case 0:{inAmount = 1;outAmount = 1;break;}
					case 1:{inAmount = 1;outAmount = 6;break;}
					case 2:{inAmount = 1;outAmount = 4;break;}
					case 4:{inAmount = 1;outAmount = 2;break;}
					case 5:{inAmount = 1;outAmount = 12;break;}
					case 6:{inAmount = 1;outAmount = 3;break;}
					case 7:{inAmount = 1;outAmount = 1;break;}
					case 8:{inAmount = 1;outAmount = 6;break;}
					case 9:{inAmount = 2;outAmount = 6;break;}
					case 10:{inAmount = 1;outAmount = 1;break;}
					case 11:{inAmount = 1;outAmount = 1;break;}
					case 12:{inAmount = 1;outAmount = 1;break;}
					case 13:{inAmount = 1;outAmount = 1;break;}
					case 14:{inAmount = 1;outAmount = 1;break;}
					case 15:{inAmount = 1;outAmount = 1;break;}
					case 16:{inAmount = 2;outAmount = 2;break;}
					case 17:{inAmount = 1;outAmount = 3;break;}
					case 18:{inAmount = 6;outAmount = 1;break;}
					case 19:{inAmount = 1;outAmount = 2;break;}
					case 20:{inAmount = 2;outAmount = 1;break;}
					case 21:{inAmount = 6;outAmount = 1;break;}
					case 22:{inAmount = 1;outAmount = 1;break;}
					case 23:{inAmount = 3;outAmount = 1;break;}
					case 24:{inAmount = 1;outAmount = 1;break;}
					case 25:{inAmount = 1;outAmount = 1;break;}
					case 26:{inAmount = 2;outAmount = 1;break;}
					case 27:{inAmount = 2;outAmount = 1;break;}
					case 28:{inAmount = 2;outAmount = 2;break;}
					case 29:{inAmount = 1;outAmount = 9;break;}
					case 30:{inAmount = 1;outAmount = 6;break;}
					case 31:{inAmount = 1;outAmount = 1;break;}
					case 32:{inAmount = 2;outAmount = 1;break;}
					case 33:{inAmount = 6;outAmount = 1;break;}
					case 34:{inAmount = 9;outAmount = 12;blueprint = 1;break;}
					case 35:{inAmount = 6;outAmount = 1;break;}
					case 36:{inAmount = 6;outAmount = 1;break;}
					case 37:{inAmount = 1;outAmount = 12;break;}
					case 38:{inAmount = 2;outAmount = 2;break;}
					case 39:{inAmount = 2;outAmount = 1;break;}
					case 41:{inAmount = 1;outAmount = 1;break;}
					case 42:{inAmount = 2;outAmount = 1;break;}
					case 43:{inAmount = 3;outAmount = 3;break;}
					case 51:{inAmount = 1;outAmount = 2;break;}
					case 52:{inAmount = 6;outAmount = 1;break;}
					case 53:{inAmount = 2;outAmount = 1;break;}
					case 54:{inAmount = 2;outAmount = 1;break;}
					case 55:{inAmount = 1;outAmount = 2;break;}
					case 56:{inAmount = 1;outAmount = 1;break;}
					case 57:{inAmount = 6;outAmount = 1;break;}
					case 58:{inAmount = 2;outAmount = 1;break;}
					case 59:{inAmount = 1;outAmount = 2;break;}
				}
			}
			switch(mID){
				case 22000:{inAmount = 0;outAmount = 1;break;}
				case 22001:{inAmount = 1;outAmount = 1;break;}
				case 22002:{inAmount = 6;outAmount = 6;break;}
				case 22003:{inAmount = 1;outAmount = 1;break;}
				case 22004:{inAmount = 2;outAmount = 3;break;}
			}

			var i = 0;

			if(IO == 'I'){
				if((solt + 1) > inAmount){
				}
				for(i = 0;i < inAmount;i++){
					if(nbt['gt.invlist'][i.toString()]['s'] == solt){
						return name(nbt['gt.invlist'][i.toString()]) + " : " +nbt['gt.invlist'][i.toString()]['Count'] + Unit("個");
					}
				}
			}
			else if(IO == 'O'){
				if((solt + 1) > outAmount){
				}
				else{
					for(i = 0;i < (inAmount + outAmount);i++){
						if(nbt['gt.invlist'][i.toString()]['s'] == (solt + inAmount)){
							return name(nbt['gt.invlist'][i.toString()]) + " : " +nbt['gt.invlist'][i.toString()]['Count'] + Unit("個");
						}
					}
				}
			}
			else if(IO == 'B'){
				if(blueprint == 1){
					for(i = 0;i < (inAmount + outAmount);i++){
						if(nbt['gt.invlist'][i.toString()]['s'] == 21){
							return name(nbt['gt.invlist'][i.toString()]) + " : " +nbt['gt.invlist'][i.toString()]['Count'] + Unit("個");
						}
					}
					return RED + "ブループリントが設置されてません";
				}
			}
		}
	</init>

</oo>